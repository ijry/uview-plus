(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{427:function(t,e){t.exports=function(t){return null==t}},436:function(t,e,i){},450:function(t,e,i){"use strict";i(436)},546:function(t,e,i){"use strict";i.r(e);var a=i(427),n=i.n(a),s=(i(191),i(12),i(21),i(112),i(67),/\/$/),d=/^[a-z]+:/i;var o={name:"PageEdit",computed:{lastUpdated:function(){return this.$page.lastUpdated},lastUpdatedText:function(){return"string"==typeof this.$themeLocaleConfig.lastUpdated?this.$themeLocaleConfig.lastUpdated:"string"==typeof this.$site.themeConfig.lastUpdated?this.$site.themeConfig.lastUpdated:"Last Updated"},editLink:function(){var t=n()(this.$page.frontmatter.editLink)?this.$site.themeConfig.editLinks:this.$page.frontmatter.editLink,e=this.$site.themeConfig,i=e.repo,a=e.docsDir,s=void 0===a?"":a,d=e.docsBranch,o=void 0===d?"master":d,r=e.docsRepo,c=void 0===r?i:r;return t&&c&&this.$page.relativePath?this.createEditLink(i,c,s,o,this.$page.relativePath):null},editLinkText:function(){return this.$themeLocaleConfig.editLinkText||this.$site.themeConfig.editLinkText||"Edit this page"}},methods:{createEditLink:function(t,e,i,a,n){if(/bitbucket.org/.test(e))return e.replace(s,"")+"/src"+"/".concat(a,"/")+(i?i.replace(s,"")+"/":"")+n+"?mode=edit&spa=0&at=".concat(a,"&fileviewer=file-view-default");return/gitlab.com/.test(e)?e.replace(s,"")+"/-/edit"+"/".concat(a,"/")+(i?i.replace(s,"")+"/":"")+n:(d.test(e)?e:"https://github.com/".concat(e)).replace(s,"")+"/edit"+"/".concat(a,"/")+(i?i.replace(s,"")+"/":"")+n}}},r=(i(450),i(18)),c=Object(r.a)(o,(function(){var t=this,e=t._self._c;return e("footer",{staticClass:"page-edit"},[e("bottom-ad"),t._v(" "),t.editLink?e("div",{staticClass:"edit-link"},[e("a",{attrs:{href:t.editLink,target:"_blank",rel:"noopener noreferrer"}},[t._v(t._s(t.editLinkText))]),t._v(" "),e("OutboundLink")],1):t._e(),t._v(" "),t.lastUpdated?e("div",{staticClass:"last-updated"},[e("span",{staticClass:"prefix"},[t._v(t._s(t.lastUpdatedText)+":")]),t._v(" "),e("span",{staticClass:"time"},[t._v(t._s(t.lastUpdated))])]):t._e()],1)}),[],!1,null,null,null);e.default=c.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,