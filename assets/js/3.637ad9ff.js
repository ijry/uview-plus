(window.webpackJsonp=window.webpackJsonp||[]).push([[3,26,199],{427:function(t,e){t.exports=function(t){return null==t}},436:function(t,e,n){},437:function(t,e,n){},450:function(t,e,n){"use strict";n(436)},451:function(t,e,n){var r=n(37),i=n(14),o=n(28);t.exports=function(t){return"string"==typeof t||!i(t)&&o(t)&&"[object String]"==r(t)}},452:function(t,e,n){"use strict";n(437)},546:function(t,e,n){"use strict";n.r(e);var r=n(427),i=n.n(r),o=(n(191),n(12),n(21),n(112),n(67),/\/$/),a=/^[a-z]+:/i;var s={name:"PageEdit",computed:{lastUpdated:function(){return this.$page.lastUpdated},lastUpdatedText:function(){return"string"==typeof this.$themeLocaleConfig.lastUpdated?this.$themeLocaleConfig.lastUpdated:"string"==typeof this.$site.themeConfig.lastUpdated?this.$site.themeConfig.lastUpdated:"Last Updated"},editLink:function(){var t=i()(this.$page.frontmatter.editLink)?this.$site.themeConfig.editLinks:this.$page.frontmatter.editLink,e=this.$site.themeConfig,n=e.repo,r=e.docsDir,o=void 0===r?"":r,a=e.docsBranch,s=void 0===a?"master":a,c=e.docsRepo,u=void 0===c?n:c;return t&&u&&this.$page.relativePath?this.createEditLink(n,u,o,s,this.$page.relativePath):null},editLinkText:function(){return this.$themeLocaleConfig.editLinkText||this.$site.themeConfig.editLinkText||"Edit this page"}},methods:{createEditLink:function(t,e,n,r,i){if(/bitbucket.org/.test(e))return e.replace(o,"")+"/src"+"/".concat(r,"/")+(n?n.replace(o,"")+"/":"")+i+"?mode=edit&spa=0&at=".concat(r,"&fileviewer=file-view-default");return/gitlab.com/.test(e)?e.replace(o,"")+"/-/edit"+"/".concat(r,"/")+(n?n.replace(o,"")+"/":"")+i:(a.test(e)?e:"https://github.com/".concat(e)).replace(o,"")+"/edit"+"/".concat(r,"/")+(n?n.replace(o,"")+"/":"")+i}}},c=(n(450),n(18)),u=Object(c.a)(s,(function(){var t=this,e=t._self._c;return e("footer",{staticClass:"page-edit"},[e("bottom-ad"),t._v(" "),t.editLink?e("div",{staticClass:"edit-link"},[e("a",{attrs:{href:t.editLink,target:"_blank",rel:"noopener noreferrer"}},[t._v(t._s(t.editLinkText))]),t._v(" "),e("OutboundLink")],1):t._e(),t._v(" "),t.lastUpdated?e("div",{staticClass:"last-updated"},[e("span",{staticClass:"prefix"},[t._v(t._s(t.lastUpdatedText)+":")]),t._v(" "),e("span",{staticClass:"time"},[t._v(t._s(t.lastUpdated))])]):t._e()],1)}),[],!1,null,null,null);e.default=u.exports},548:function(t,e,n){"use strict";n.r(e);n(191);var r=n(414),i=n(451),o=n.n(i),a=n(427),s=n.n(a),c={name:"PageNav",props:["sidebarItems"],computed:{prev(){return l(u.PREV,this)},next(){return l(u.NEXT,this)}}};const u={NEXT:{resolveLink:function(t,e){return f(t,e,1)},getThemeLinkConfig:({nextLinks:t})=>t,getPageLinkConfig:({frontmatter:t})=>t.next},PREV:{resolveLink:function(t,e){return f(t,e,-1)},getThemeLinkConfig:({prevLinks:t})=>t,getPageLinkConfig:({frontmatter:t})=>t.prev}};function l(t,{$themeConfig:e,$page:n,$route:i,$site:a,sidebarItems:c}){const{resolveLink:u,getThemeLinkConfig:l,getPageLinkConfig:f}=t,h=l(e),p=f(n),d=s()(p)?h:p;return!1===d?void 0:o()(d)?Object(r.i)(a.pages,d,i.path):u(n,c)}function f(t,e,n){const r=[];!function t(e,n){for(let r=0,i=e.length;r<i;r++)"group"===e[r].type?t(e[r].children||[],n):n.push(e[r])}(e,r);for(let e=0;e<r.length;e++){const i=r[e];if("page"===i.type&&i.path===decodeURIComponent(t.path))return r[e+n]}}var h=c,p=(n(452),n(18)),d=Object(p.a)(h,(function(){var t=this,e=t._self._c;return t.prev||t.next?e("div",{staticClass:"page-nav"},[e("p",{staticClass:"inner"},[t.prev?e("span",{staticClass:"prev"},[t._v("\n      ←\n      "),"external"===t.prev.type?e("a",{staticClass:"prev",attrs:{href:t.prev.path,target:"_blank",rel:"noopener noreferrer"}},[t._v("\n        "+t._s(t.prev.title||t.prev.path)+"\n\n        "),e("OutboundLink")],1):e("RouterLink",{staticClass:"prev",attrs:{to:t.prev.path}},[t._v("\n        "+t._s(t.prev.title||t.prev.path)+"\n      ")])],1):t._e(),t._v(" "),t.next?e("span",{staticClass:"next"},["external"===t.next.type?e("a",{attrs:{href:t.next.path,target:"_blank",rel:"noopener noreferrer"}},[t._v("\n        "+t._s(t.next.title||t.next.path)+"\n\n        "),e("OutboundLink")],1):e("RouterLink",{attrs:{to:t.next.path}},[t._v("\n        "+t._s(t.next.title||t.next.path)+"\n      ")]),t._v("\n      →\n    ")],1):t._e()])]):t._e()}),[],!1,null,null,null);e.default=d.exports},549:function(t,e,n){"use strict";n.r(e);n(192),n(191),n(12),n(112);var r=n(421),i=n.n(r);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(){
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
a=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,i=Object.defineProperty||function(t,e,n){t[e]=n.value},s="function"==typeof Symbol?Symbol:{},c=s.iterator||"@@iterator",u=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function f(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{f({},"")}catch(t){f=function(t,e,n){return t[e]=n}}function h(t,e,n,r){var o=e&&e.prototype instanceof y?e:y,a=Object.create(o.prototype),s=new D(r||[]);return i(a,"_invoke",{value:$(t,n,s)}),a}function p(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=h;var d="suspendedStart",v="executing",g="completed",m={};function y(){}function w(){}function _(){}var x={};f(x,c,(function(){return this}));var b=Object.getPrototypeOf,L=b&&b(b(j([])));L&&L!==n&&r.call(L,c)&&(x=L);var k=_.prototype=y.prototype=Object.create(x);function E(t){["next","throw","return"].forEach((function(e){f(t,e,(function(t){return this._invoke(e,t)}))}))}function C(t,e){function n(i,a,s,c){var u=p(t[i],t,a);if("throw"!==u.type){var l=u.arg,f=l.value;return f&&"object"==o(f)&&r.call(f,"__await")?e.resolve(f.__await).then((function(t){n("next",t,s,c)}),(function(t){n("throw",t,s,c)})):e.resolve(f).then((function(t){l.value=t,s(l)}),(function(t){return n("throw",t,s,c)}))}c(u.arg)}var a;i(this,"_invoke",{value:function(t,r){function i(){return new e((function(e,i){n(t,r,e,i)}))}return a=a?a.then(i,i):i()}})}function $(e,n,r){var i=d;return function(o,a){if(i===v)throw Error("Generator is already running");if(i===g){if("throw"===o)throw a;return{value:t,done:!0}}for(r.method=o,r.arg=a;;){var s=r.delegate;if(s){var c=P(s,r);if(c){if(c===m)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(i===d)throw i=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);i=v;var u=p(e,n,r);if("normal"===u.type){if(i=r.done?g:"suspendedYield",u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(i=g,r.method="throw",r.arg=u.arg)}}}function P(e,n){var r=n.method,i=e.iterator[r];if(i===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,P(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var o=p(i,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,m;var a=o.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function O(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function D(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(O,this),this.reset(!0)}function j(e){if(e||""===e){var n=e[c];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function n(){for(;++i<e.length;)if(r.call(e,i))return n.value=e[i],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}throw new TypeError(o(e)+" is not iterable")}return w.prototype=_,i(k,"constructor",{value:_,configurable:!0}),i(_,"constructor",{value:w,configurable:!0}),w.displayName=f(_,l,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===w||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,_):(t.__proto__=_,f(t,l,"GeneratorFunction")),t.prototype=Object.create(k),t},e.awrap=function(t){return{__await:t}},E(C.prototype),f(C.prototype,u,(function(){return this})),e.AsyncIterator=C,e.async=function(t,n,r,i,o){void 0===o&&(o=Promise);var a=new C(h(t,n,r,i),o);return e.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},E(k),f(k,l,"Generator"),f(k,c,(function(){return this})),f(k,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=j,D.prototype={constructor:D,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function i(r,i){return s.type="throw",s.arg=e,n.next=r,i&&(n.method="next",n.arg=t),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var c=r.call(a,"catchLoc"),u=r.call(a,"finallyLoc");if(c&&u){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),T(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var i=r.arg;T(n)}return i}}throw Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:j(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}function s(t,e,n,r,i,o,a){try{var s=t[o](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,i)}function c(t){return function(){var e=this,n=arguments;return new Promise((function(r,i){var o=t.apply(e,n);function a(t){s(o,r,i,a,c,"next",t)}function c(t){s(o,r,i,a,c,"throw",t)}a(void 0)}))}}var u={data:function(){return{id:"",adDialog:!1,qrDialog:!1,qrUrl:"",watchEnd:!1,loadingInstance:null,timer:null,check:null,whiteList:["/user/login.html"]}},created:function(){},mounted:function(){var t=this;setTimeout((function(){t.checkVip()}),1e3),this.timer||(this.timer=setInterval((function(){}),1e4)),this.check=setInterval((function(){t.checkDisplay()}),5e3)},beforeDestroy:function(){clearInterval(this.check)},watch:{$route:function(t,e){this.checkVip()}},methods:{inWl:function(){return!!this.$route.path.startsWith("/guide/")||(!!this.$route.path.startsWith("/cooperation/")||(!!this.$route.path.startsWith("/user/")||this.whiteList.includes(this.$route.path)))},checkVip:function(){if(this.inWl())this.qrDialog=!1;else{if("undefined"!=typeof window&&window.localStorage){var t=localStorage.getItem("adExpire");if(!t||Date.parse(new Date)/1e3>t||t-Date.parse(new Date)/1e3>43200)return this.qrDialog=!0,void this.watchAd()}this.qrDialog=!1}},openDialog:function(){this.qrDialog=!0},checkDisplay:function(){var t=document.getElementById("vip-box");if(console.log(t),!t)return alert("请关闭广告屏蔽器支持我们！"),alert("请关闭广告屏蔽器支持我们！"),alert("请关闭广告屏蔽器支持我们！"),void(document.documentElement.style.opacity="0");for(var e=document.getElementsByClassName("v-modal"),n=0;n<e.length;n++){"none"===window.getComputedStyle(e[n]).display&&alert("请关闭广告屏蔽器支持我们谢谢！")}},watchAd:function(){var t=this;return c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{i.a.post("https://uiadmin.net/api/v1/wxapp/ad/add").then((function(e){var n=e.data;200===n.code?(t.id=n.data.id,t.qrUrl=n.data.base64):t.$message.error("出错"+n.msg)}))}catch(e){t.$message.error("请求出错")}case 1:case"end":return e.stop()}}),e)})))()},checkEnd:function(){var t=this;return c(a().mark((function e(){return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{t.$prompt("请输入正确的微信昵称验证","提示",{confirmButtonText:"确定",cancelButtonText:"取消"}).then((function(e){var n=e.value;i.a.post("https://uiadmin.net/api/v1/wxapp/ad/check?id=".concat(t.id),{wxnickname:n}).then((function(e){var n=e.data;200===n.code?(t.watchEnd=!0,localStorage.setItem("adExpire",Date.parse(new Date)/1e3+43200),t.qrDialog=!1):t.$message.error(n.msg)}))})).catch((function(){}))}catch(e){t.$message.error("检查出错")}case 1:case"end":return e.stop()}}),e)})))()}}},l=n(18),f=Object(l.a)(u,(function(){var t=this,e=t._self._c;return e("div",[e("el-dialog",{ref:"myElement",staticClass:"novip",attrs:{id:"vip-box",title:"广告",visible:t.qrDialog,width:"600px","close-on-click-modal":!1,"close-on-press-escape":!1,"show-close":!1},on:{"update:visible":function(e){t.qrDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("div",[e("el-button",{attrs:{type:"primary"},on:{click:function(e){return e.stopPropagation(),t.checkEnd.apply(null,arguments)}}},[t._v("已经看完")])],1)]},proxy:!0}])},[e("div",[e("h3",[t._v("请使用微信扫码")]),t._v(" "),e("div",{staticClass:"mt-1"},[t._v("扫码后请点击“打开广告”蓝色按钮")]),t._v(" "),e("div",[t._v("\n        感谢对开源软件的支持与理解，现阶段观看广告将有助于uview-plus的可持续发展，特别是在鸿蒙、uni-app-x等方面的开发，我们也在积极探索更好的可持续发展模式，以投入更多的研发能力便于提供更加好用的框架。收集了大家的意见反馈我们正在规划推出社区发帖获得免广告点数，自媒体发短视频教程获得广告点数，提交FastView可视化模板送广告点数，提交项目线上案例送广告点数，帮助其它用户解决问题送广告点数等多种方法，希望能够适应不通的需求，并且能积极推动uview-plus发展。\n      ")]),t._v(" "),e("div",{directives:[{name:"loading",rawName:"v-loading",value:!t.qrUrl,expression:"qrUrl ? false : true"}],staticClass:"pt-3"},[t.qrUrl?e("img",{attrs:{src:t.qrUrl,alt:"mind"}}):t._e()])])])],1)}),[],!1,null,null,null);e.default=f.exports},653:function(t,e,n){"use strict";n.r(e);var r=n(546),i=n(548),o=n(549),a={components:{PageEdit:r.default,PageNav:i.default,AdVip:o.default},props:["sidebarItems"],data:function(){return{}}},s=n(18),c=Object(s.a)(a,(function(){var t=this,e=t._self._c;return e("main",{staticClass:"page",style:{marginTop:t.showV2Tips?"2.3rem":0}},[t._t("top"),t._v(" "),e("Content",{staticClass:"theme-default-content"}),t._v(" "),e("PageEdit"),t._v(" "),e("PageNav",t._b({},"PageNav",{sidebarItems:t.sidebarItems},!1)),t._v(" "),e("ad-vip"),t._v(" "),t._t("bottom")],2)}),[],!1,null,null,null);e.default=c.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzTmlsLmpzIiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvUGFnZUVkaXQudnVlPzk3NDciLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc1N0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHZ1ZXByZXNzL3RoZW1lLWRlZmF1bHQvY29tcG9uZW50cy9QYWdlTmF2LnZ1ZT9kYWJjIiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvUGFnZUVkaXQudnVlIiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL3V0aWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvUGFnZUVkaXQudnVlIiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvUGFnZUVkaXQudnVlPzI0NGQiLCJ3ZWJwYWNrOi8vLy4vZG9jcy8udnVlcHJlc3MvdGhlbWUvY29tcG9uZW50cy9QYWdlRWRpdC52dWU/ZWNlZSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHZ1ZXByZXNzL3RoZW1lLWRlZmF1bHQvY29tcG9uZW50cy9QYWdlTmF2LnZ1ZSIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL0B2dWVwcmVzcy90aGVtZS1kZWZhdWx0L2NvbXBvbmVudHMvUGFnZU5hdi52dWUiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B2dWVwcmVzcy90aGVtZS1kZWZhdWx0L2NvbXBvbmVudHMvUGFnZU5hdi52dWU/OWM5MSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHZ1ZXByZXNzL3RoZW1lLWRlZmF1bHQvY29tcG9uZW50cy9QYWdlTmF2LnZ1ZT8xMjYxIiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvYWRWaXAudnVlIiwid2VicGFjazovLy9kb2NzLy52dWVwcmVzcy90aGVtZS9jb21wb25lbnRzL2FkVmlwLnZ1ZSIsIndlYnBhY2s6Ly8vLi9kb2NzLy52dWVwcmVzcy90aGVtZS9jb21wb25lbnRzL2FkVmlwLnZ1ZT9jNGQ3Iiwid2VicGFjazovLy8uL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvYWRWaXAudnVlP2RkMzAiLCJ3ZWJwYWNrOi8vLy4vZG9jcy8udnVlcHJlc3MvdGhlbWUvY29tcG9uZW50cy9QYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9kb2NzLy52dWVwcmVzcy90aGVtZS9jb21wb25lbnRzL1BhZ2UudnVlPzk2MTkiLCJ3ZWJwYWNrOi8vL2RvY3MvLnZ1ZXByZXNzL3RoZW1lL2NvbXBvbmVudHMvUGFnZS52dWUiLCJ3ZWJwYWNrOi8vLy4vZG9jcy8udnVlcHJlc3MvdGhlbWUvY29tcG9uZW50cy9QYWdlLnZ1ZT8yNzQ3Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJhc2VHZXRUYWciLCJpc0FycmF5IiwiaXNPYmplY3RMaWtlIiwiZW5kaW5nU2xhc2hSRSIsIm91dGJvdW5kUkUiLCJuYW1lIiwiY29tcHV0ZWQiLCJsYXN0VXBkYXRlZCIsIiRwYWdlIiwibGFzdFVwZGF0ZWRUZXh0IiwiJHRoZW1lTG9jYWxlQ29uZmlnIiwiJHNpdGUiLCJ0aGVtZUNvbmZpZyIsImVkaXRMaW5rIiwic2hvd0VkaXRMaW5rIiwiaXNOaWwiLCJmcm9udG1hdHRlciIsImVkaXRMaW5rcyIsIl90aGlzJCRzaXRlJHRoZW1lQ29uZiIsInJlcG8iLCJfdGhpcyQkc2l0ZSR0aGVtZUNvbmYyIiwiZG9jc0RpciIsIl90aGlzJCRzaXRlJHRoZW1lQ29uZjMiLCJkb2NzQnJhbmNoIiwiX3RoaXMkJHNpdGUkdGhlbWVDb25mNCIsImRvY3NSZXBvIiwicmVsYXRpdmVQYXRoIiwiY3JlYXRlRWRpdExpbmsiLCJlZGl0TGlua1RleHQiLCJtZXRob2RzIiwicGF0aCIsInRlc3QiLCJyZXBsYWNlIiwiY29uY2F0IiwiY29tcG9uZW50IiwiX3ZtIiwidGhpcyIsIl9jIiwiX3NlbGYiLCJzdGF0aWNDbGFzcyIsIl92IiwiYXR0cnMiLCJfcyIsIl9lIiwicHJvcHMiLCJwcmV2IiwicmVzb2x2ZVBhZ2VMaW5rIiwiTElOS19UWVBFUyIsIlBSRVYiLCJuZXh0IiwiTkVYVCIsInJlc29sdmVMaW5rIiwicGFnZSIsIml0ZW1zIiwiZmluZCIsImdldFRoZW1lTGlua0NvbmZpZyIsIm5leHRMaW5rcyIsImdldFBhZ2VMaW5rQ29uZmlnIiwicHJldkxpbmtzIiwibGlua1R5cGUiLCIkdGhlbWVDb25maWciLCIkcm91dGUiLCJzaWRlYmFySXRlbXMiLCJ0aGVtZUxpbmtDb25maWciLCJwYWdlTGlua0NvbmZpZyIsImxpbmsiLCJpc1N0cmluZyIsInJlc29sdmVQYWdlIiwicGFnZXMiLCJvZmZzZXQiLCJyZXMiLCJmbGF0dGVuIiwiaSIsImwiLCJsZW5ndGgiLCJ0eXBlIiwiY2hpbGRyZW4iLCJwdXNoIiwiY3VyIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidGl0bGUiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiZSIsInQiLCJyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwibiIsImhhc093blByb3BlcnR5IiwibyIsImRlZmluZVByb3BlcnR5IiwiU3ltYm9sIiwiYSIsIml0ZXJhdG9yIiwiYyIsImFzeW5jSXRlcmF0b3IiLCJ1IiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ3cmFwIiwiR2VuZXJhdG9yIiwiY3JlYXRlIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsImFyZyIsImNhbGwiLCJoIiwiZiIsInMiLCJ5IiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsInAiLCJkIiwiZ2V0UHJvdG90eXBlT2YiLCJ2IiwidmFsdWVzIiwiZyIsImRlZmluZUl0ZXJhdG9yTWV0aG9kcyIsImZvckVhY2giLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsImludm9rZSIsIl90eXBlb2YiLCJyZXNvbHZlIiwiX19hd2FpdCIsInRoZW4iLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsIkVycm9yIiwiZG9uZSIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm1hcmsiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImF3cmFwIiwiYXN5bmMiLCJQcm9taXNlIiwia2V5cyIsInJldmVyc2UiLCJwb3AiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9uZXh0IiwiX3Rocm93IiwiZGF0YSIsImlkIiwiYWREaWFsb2ciLCJxckRpYWxvZyIsInFyVXJsIiwid2F0Y2hFbmQiLCJsb2FkaW5nSW5zdGFuY2UiLCJ0aW1lciIsImNoZWNrIiwid2hpdGVMaXN0IiwiY3JlYXRlZCIsIm1vdW50ZWQiLCJfdGhpcyIsInNldFRpbWVvdXQiLCJjaGVja1ZpcCIsInNldEludGVydmFsIiwiY2hlY2tEaXNwbGF5IiwiYmVmb3JlRGVzdHJveSIsImNsZWFySW50ZXJ2YWwiLCJ3YXRjaCIsInRvIiwiZnJvbSIsImluV2wiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJhZEV4cGlyZSIsImdldEl0ZW0iLCJEYXRlIiwicGFyc2UiLCJ3YXRjaEFkIiwib3BlbkRpYWxvZyIsImVsZW1lbnRFeGlzdHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY29uc29sZSIsImxvZyIsImFsZXJ0IiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJvcGFjaXR5IiwiZWxlbWVudHMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImRpc3BsYXkiLCJfdGhpczIiLCJfY2FsbGVlIiwiX2NvbnRleHQiLCJheGlvcyIsInBvc3QiLCJyZXNwb25zZSIsInJlczEiLCJjb2RlIiwiYmFzZTY0IiwiJG1lc3NhZ2UiLCJlcnJvciIsIm1zZyIsImNoZWNrRW5kIiwiX3RoaXMzIiwiX2NhbGxlZTIiLCJfY29udGV4dDIiLCIkcHJvbXB0IiwiY29uZmlybUJ1dHRvblRleHQiLCJjYW5jZWxCdXR0b25UZXh0IiwiX3JlZiIsInd4bmlja25hbWUiLCJzZXRJdGVtIiwicmVmIiwib24iLCIkZXZlbnQiLCJzY29wZWRTbG90cyIsIl91Iiwia2V5IiwiZm4iLCJzdG9wUHJvcGFnYXRpb24iLCJwcm94eSIsImRpcmVjdGl2ZXMiLCJyYXdOYW1lIiwiZXhwcmVzc2lvbiIsImNvbXBvbmVudHMiLCJQYWdlRWRpdCIsIlBhZ2VOYXYiLCJBZFZpcCIsIm1hcmdpblRvcCIsInNob3dWMlRpcHMiLCJfdCIsIl9iIl0sIm1hcHBpbmdzIjoia0ZBd0JBQSxFQUFPQyxRQUpQLFNBQWVDLEdBQ2IsT0FBZ0IsTUFBVEEsSSw2RUNyQlQsUSxvQkNBQSxJQUFJQyxFQUFhLEVBQVEsSUFDckJDLEVBQVUsRUFBUSxJQUNsQkMsRUFBZSxFQUFRLElBMkIzQkwsRUFBT0MsUUFMUCxTQUFrQkMsR0FDaEIsTUFBdUIsaUJBQVRBLElBQ1ZFLEVBQVFGLElBQVVHLEVBQWFILElBckJyQixt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WUFBWSxRQUFRLENBQUVKLEVBQUlxSixNQUFPbkosRUFBRyxNQUFNLENBQUNJLE1BQU0sQ0FBQyxJQUFNTixFQUFJcUosTUFBTSxJQUFNLFVBQVVySixFQUFJUSxZQUFZLEtBRXhyQyxJR1NwQixFQUNBLEtBQ0EsS0FDQSxNQUlhLFVBQUFULEUsaURDbEJmLEksMkJDQXdULEVDc0J6UyxDQUNma08sV0FBQSxDQUFBQyxtQkFBQUMsa0JBQUFDLGlCQUNBM04sTUFBQSxpQkFDQXdJLEtBQUEsV0FDQSxXLFFDbkJJbEosRUFBWSxZQUNkLEdIUlcsV0FBa0IsSUFBSUMsRUFBSUMsS0FBS0MsRUFBR0YsRUFBSUcsTUFBTUQsR0FBRyxPQUFPQSxFQUFHLE9BQU8sQ0FBQ0UsWUFBWSxPQUFPcUwsTUFBTyxDQUNoRzRDLFVBQVdyTyxFQUFJc08sV0FBYSxTQUFXLElBQ3ZDLENBQUN0TyxFQUFJdU8sR0FBRyxPQUFPdk8sRUFBSUssR0FBRyxLQUFLSCxFQUFHLFVBQVUsQ0FBQ0UsWUFBWSwwQkFBMEJKLEVBQUlLLEdBQUcsS0FBS0gsRUFBRyxZQUFZRixFQUFJSyxHQUFHLEtBQUtILEVBQUcsVUFBVUYsRUFBSXdPLEdBQUcsR0FBRyxVQUFVLENBQUU3TSxhQUFjM0IsRUFBSTJCLGVBQWUsSUFBUTNCLEVBQUlLLEdBQUcsS0FBS0gsRUFBRyxVQUFVRixFQUFJSyxHQUFHLEtBQUtMLEVBQUl1TyxHQUFHLFdBQVcsS0FFM08sSUdPcEIsRUFDQSxLQUNBLEtBQ0EsTUFJYSxVQUFBeE8sRSIsImZpbGUiOiJhc3NldHMvanMvMy42MzdhZDlmZi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYG51bGxgIG9yIGB1bmRlZmluZWRgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG51bGxpc2gsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc05pbChudWxsKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTmlsKHZvaWQgMCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc05pbChOYU4pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOaWwodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNOaWw7XG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMTMtb25lT2YtMS0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTEzLW9uZU9mLTEtMiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0xMy1vbmVPZi0xLTMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlRWRpdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00OTVlYTc1MyZwcm9kJmxhbmc9c3R5bHVzXCIiLCJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgU3RyaW5nYCBwcmltaXRpdmUgb3Igb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc3RyaW5nLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNTdHJpbmcoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTdHJpbmcoMSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzdHJpbmcnIHx8XG4gICAgKCFpc0FycmF5KHZhbHVlKSAmJiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHN0cmluZ1RhZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNTdHJpbmc7XG4iLCJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTEzLW9uZU9mLTEtMSEuLi8uLi8uLi92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tMTMtb25lT2YtMS0yIS4uLy4uLy4uL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMTMtb25lT2YtMS0zIS4uLy4uLy4uL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlTmF2LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJjMDdkNDNlJnByb2QmbGFuZz1zdHlsdXNcIiIsInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKXt2YXIgX3ZtPXRoaXMsX2M9X3ZtLl9zZWxmLl9jO3JldHVybiBfYygnZm9vdGVyJyx7c3RhdGljQ2xhc3M6XCJwYWdlLWVkaXRcIn0sW19jKCdib3R0b20tYWQnKSxfdm0uX3YoXCIgXCIpLChfdm0uZWRpdExpbmspP19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImVkaXQtbGlua1wifSxbX2MoJ2EnLHthdHRyczp7XCJocmVmXCI6X3ZtLmVkaXRMaW5rLFwidGFyZ2V0XCI6XCJfYmxhbmtcIixcInJlbFwiOlwibm9vcGVuZXIgbm9yZWZlcnJlclwifX0sW192bS5fdihfdm0uX3MoX3ZtLmVkaXRMaW5rVGV4dCkpXSksX3ZtLl92KFwiIFwiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpOl92bS5fZSgpLF92bS5fdihcIiBcIiksKF92bS5sYXN0VXBkYXRlZCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwibGFzdC11cGRhdGVkXCJ9LFtfYygnc3Bhbicse3N0YXRpY0NsYXNzOlwicHJlZml4XCJ9LFtfdm0uX3YoX3ZtLl9zKF92bS5sYXN0VXBkYXRlZFRleHQpK1wiOlwiKV0pLF92bS5fdihcIiBcIiksX2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcInRpbWVcIn0sW192bS5fdihfdm0uX3MoX3ZtLmxhc3RVcGRhdGVkKSldKV0pOl92bS5fZSgpXSwxKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJleHBvcnQgY29uc3QgaGFzaFJFID0gLyMuKiQvXG5leHBvcnQgY29uc3QgZXh0UkUgPSAvXFwuKG1kfGh0bWwpJC9cbmV4cG9ydCBjb25zdCBlbmRpbmdTbGFzaFJFID0gL1xcLyQvXG5leHBvcnQgY29uc3Qgb3V0Ym91bmRSRSA9IC9eW2Etel0rOi9pXG5cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemUgKHBhdGgpIHtcbiAgcmV0dXJuIGRlY29kZVVSSShwYXRoKVxuICAgIC5yZXBsYWNlKGhhc2hSRSwgJycpXG4gICAgLnJlcGxhY2UoZXh0UkUsICcnKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SGFzaCAocGF0aCkge1xuICBjb25zdCBtYXRjaCA9IHBhdGgubWF0Y2goaGFzaFJFKVxuICBpZiAobWF0Y2gpIHtcbiAgICByZXR1cm4gbWF0Y2hbMF1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNFeHRlcm5hbCAocGF0aCkge1xuICByZXR1cm4gb3V0Ym91bmRSRS50ZXN0KHBhdGgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc01haWx0byAocGF0aCkge1xuICByZXR1cm4gL15tYWlsdG86Ly50ZXN0KHBhdGgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1RlbCAocGF0aCkge1xuICByZXR1cm4gL150ZWw6Ly50ZXN0KHBhdGgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVFeHQgKHBhdGgpIHtcbiAgaWYgKGlzRXh0ZXJuYWwocGF0aCkpIHtcbiAgICByZXR1cm4gcGF0aFxuICB9XG4gIGNvbnN0IGhhc2hNYXRjaCA9IHBhdGgubWF0Y2goaGFzaFJFKVxuICBjb25zdCBoYXNoID0gaGFzaE1hdGNoID8gaGFzaE1hdGNoWzBdIDogJydcbiAgY29uc3Qgbm9ybWFsaXplZCA9IG5vcm1hbGl6ZShwYXRoKVxuXG4gIGlmIChlbmRpbmdTbGFzaFJFLnRlc3Qobm9ybWFsaXplZCkpIHtcbiAgICByZXR1cm4gcGF0aFxuICB9XG4gIHJldHVybiBub3JtYWxpemVkICsgJy5odG1sJyArIGhhc2hcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQWN0aXZlIChyb3V0ZSwgcGF0aCkge1xuICBjb25zdCByb3V0ZUhhc2ggPSBkZWNvZGVVUklDb21wb25lbnQocm91dGUuaGFzaClcbiAgY29uc3QgbGlua0hhc2ggPSBnZXRIYXNoKHBhdGgpXG4gIGlmIChsaW5rSGFzaCAmJiByb3V0ZUhhc2ggIT09IGxpbmtIYXNoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgY29uc3Qgcm91dGVQYXRoID0gbm9ybWFsaXplKHJvdXRlLnBhdGgpXG4gIGNvbnN0IHBhZ2VQYXRoID0gbm9ybWFsaXplKHBhdGgpXG4gIHJldHVybiByb3V0ZVBhdGggPT09IHBhZ2VQYXRoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlUGFnZSAocGFnZXMsIHJhd1BhdGgsIGJhc2UpIHtcbiAgaWYgKGlzRXh0ZXJuYWwocmF3UGF0aCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ2V4dGVybmFsJyxcbiAgICAgIHBhdGg6IHJhd1BhdGhcbiAgICB9XG4gIH1cbiAgaWYgKGJhc2UpIHtcbiAgICByYXdQYXRoID0gcmVzb2x2ZVBhdGgocmF3UGF0aCwgYmFzZSlcbiAgfVxuICBjb25zdCBwYXRoID0gbm9ybWFsaXplKHJhd1BhdGgpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAobm9ybWFsaXplKHBhZ2VzW2ldLnJlZ3VsYXJQYXRoKSA9PT0gcGF0aCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHBhZ2VzW2ldLCB7XG4gICAgICAgIHR5cGU6ICdwYWdlJyxcbiAgICAgICAgcGF0aDogZW5zdXJlRXh0KHBhZ2VzW2ldLnBhdGgpXG4gICAgICB9KVxuICAgIH1cbiAgfVxuICBjb25zb2xlLmVycm9yKGBbdnVlcHJlc3NdIE5vIG1hdGNoaW5nIHBhZ2UgZm91bmQgZm9yIHNpZGViYXIgaXRlbSBcIiR7cmF3UGF0aH1cImApXG4gIHJldHVybiB7fVxufVxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aCAocmVsYXRpdmUsIGJhc2UsIGFwcGVuZCkge1xuICBjb25zdCBmaXJzdENoYXIgPSByZWxhdGl2ZS5jaGFyQXQoMClcbiAgaWYgKGZpcnN0Q2hhciA9PT0gJy8nKSB7XG4gICAgcmV0dXJuIHJlbGF0aXZlXG4gIH1cblxuICBpZiAoZmlyc3RDaGFyID09PSAnPycgfHwgZmlyc3RDaGFyID09PSAnIycpIHtcbiAgICByZXR1cm4gYmFzZSArIHJlbGF0aXZlXG4gIH1cblxuICBjb25zdCBzdGFjayA9IGJhc2Uuc3BsaXQoJy8nKVxuXG4gIC8vIHJlbW92ZSB0cmFpbGluZyBzZWdtZW50IGlmOlxuICAvLyAtIG5vdCBhcHBlbmRpbmdcbiAgLy8gLSBhcHBlbmRpbmcgdG8gdHJhaWxpbmcgc2xhc2ggKGxhc3Qgc2VnbWVudCBpcyBlbXB0eSlcbiAgaWYgKCFhcHBlbmQgfHwgIXN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdKSB7XG4gICAgc3RhY2sucG9wKClcbiAgfVxuXG4gIC8vIHJlc29sdmUgcmVsYXRpdmUgcGF0aFxuICBjb25zdCBzZWdtZW50cyA9IHJlbGF0aXZlLnJlcGxhY2UoL15cXC8vLCAnJykuc3BsaXQoJy8nKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgc2VnbWVudCA9IHNlZ21lbnRzW2ldXG4gICAgaWYgKHNlZ21lbnQgPT09ICcuLicpIHtcbiAgICAgIHN0YWNrLnBvcCgpXG4gICAgfSBlbHNlIGlmIChzZWdtZW50ICE9PSAnLicpIHtcbiAgICAgIHN0YWNrLnB1c2goc2VnbWVudClcbiAgICB9XG4gIH1cblxuICAvLyBlbnN1cmUgbGVhZGluZyBzbGFzaFxuICBpZiAoc3RhY2tbMF0gIT09ICcnKSB7XG4gICAgc3RhY2sudW5zaGlmdCgnJylcbiAgfVxuXG4gIHJldHVybiBzdGFjay5qb2luKCcvJylcbn1cblxuLyoqXG4gKiBAcGFyYW0geyBQYWdlIH0gcGFnZVxuICogQHBhcmFtIHsgc3RyaW5nIH0gcmVndWxhclBhdGhcbiAqIEBwYXJhbSB7IFNpdGVEYXRhIH0gc2l0ZVxuICogQHBhcmFtIHsgc3RyaW5nIH0gbG9jYWxlUGF0aFxuICogQHJldHVybnMgeyBTaWRlYmFyR3JvdXAgfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVNpZGViYXJJdGVtcyAocGFnZSwgcmVndWxhclBhdGgsIHNpdGUsIGxvY2FsZVBhdGgpIHtcbiAgY29uc3QgeyBwYWdlcywgdGhlbWVDb25maWcgfSA9IHNpdGVcblxuICBjb25zdCBsb2NhbGVDb25maWcgPSBsb2NhbGVQYXRoICYmIHRoZW1lQ29uZmlnLmxvY2FsZXNcbiAgICA/IHRoZW1lQ29uZmlnLmxvY2FsZXNbbG9jYWxlUGF0aF0gfHwgdGhlbWVDb25maWdcbiAgICA6IHRoZW1lQ29uZmlnXG5cbiAgY29uc3QgcGFnZVNpZGViYXJDb25maWcgPSBwYWdlLmZyb250bWF0dGVyLnNpZGViYXIgfHwgbG9jYWxlQ29uZmlnLnNpZGViYXIgfHwgdGhlbWVDb25maWcuc2lkZWJhclxuICBpZiAocGFnZVNpZGViYXJDb25maWcgPT09ICdhdXRvJykge1xuICAgIHJldHVybiByZXNvbHZlSGVhZGVycyhwYWdlKVxuICB9XG5cbiAgY29uc3Qgc2lkZWJhckNvbmZpZyA9IGxvY2FsZUNvbmZpZy5zaWRlYmFyIHx8IHRoZW1lQ29uZmlnLnNpZGViYXJcbiAgaWYgKCFzaWRlYmFyQ29uZmlnKSB7XG4gICAgcmV0dXJuIFtdXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgeyBiYXNlLCBjb25maWcgfSA9IHJlc29sdmVNYXRjaGluZ0NvbmZpZyhyZWd1bGFyUGF0aCwgc2lkZWJhckNvbmZpZylcbiAgICBpZiAoY29uZmlnID09PSAnYXV0bycpIHtcbiAgICAgIHJldHVybiByZXNvbHZlSGVhZGVycyhwYWdlKVxuICAgIH1cbiAgICByZXR1cm4gY29uZmlnXG4gICAgICA/IGNvbmZpZy5tYXAoaXRlbSA9PiByZXNvbHZlSXRlbShpdGVtLCBwYWdlcywgYmFzZSkpXG4gICAgICA6IFtdXG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0geyBQYWdlIH0gcGFnZVxuICogQHJldHVybnMgeyBTaWRlYmFyR3JvdXAgfVxuICovXG5mdW5jdGlvbiByZXNvbHZlSGVhZGVycyAocGFnZSkge1xuICBjb25zdCBoZWFkZXJzID0gZ3JvdXBIZWFkZXJzKHBhZ2UuaGVhZGVycyB8fCBbXSlcbiAgcmV0dXJuIFt7XG4gICAgdHlwZTogJ2dyb3VwJyxcbiAgICBjb2xsYXBzYWJsZTogZmFsc2UsXG4gICAgdGl0bGU6IHBhZ2UudGl0bGUsXG4gICAgcGF0aDogbnVsbCxcbiAgICBjaGlsZHJlbjogaGVhZGVycy5tYXAoaCA9PiAoe1xuICAgICAgdHlwZTogJ2F1dG8nLFxuICAgICAgdGl0bGU6IGgudGl0bGUsXG4gICAgICBiYXNlUGF0aDogcGFnZS5wYXRoLFxuICAgICAgcGF0aDogcGFnZS5wYXRoICsgJyMnICsgaC5zbHVnLFxuICAgICAgY2hpbGRyZW46IGguY2hpbGRyZW4gfHwgW11cbiAgICB9KSlcbiAgfV1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwSGVhZGVycyAoaGVhZGVycykge1xuICAvLyBncm91cCBoM3MgdW5kZXIgaDJcbiAgaGVhZGVycyA9IGhlYWRlcnMubWFwKGggPT4gT2JqZWN0LmFzc2lnbih7fSwgaCkpXG4gIGxldCBsYXN0SDJcbiAgaGVhZGVycy5mb3JFYWNoKGggPT4ge1xuICAgIGlmIChoLmxldmVsID09PSAyKSB7XG4gICAgICBsYXN0SDIgPSBoXG4gICAgfSBlbHNlIGlmIChsYXN0SDIpIHtcbiAgICAgIChsYXN0SDIuY2hpbGRyZW4gfHwgKGxhc3RIMi5jaGlsZHJlbiA9IFtdKSkucHVzaChoKVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIGhlYWRlcnMuZmlsdGVyKGggPT4gaC5sZXZlbCA9PT0gMilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVOYXZMaW5rSXRlbSAobGlua0l0ZW0pIHtcbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24obGlua0l0ZW0sIHtcbiAgICB0eXBlOiBsaW5rSXRlbS5pdGVtcyAmJiBsaW5rSXRlbS5pdGVtcy5sZW5ndGggPyAnbGlua3MnIDogJ2xpbmsnXG4gIH0pXG59XG5cbi8qKlxuICogQHBhcmFtIHsgUm91dGUgfSByb3V0ZVxuICogQHBhcmFtIHsgQXJyYXk8c3RyaW5nfHN0cmluZ1tdPiB8IEFycmF5PFNpZGViYXJHcm91cD4gfCBbbGluazogc3RyaW5nXTogU2lkZWJhckNvbmZpZyB9IGNvbmZpZ1xuICogQHJldHVybnMgeyBiYXNlOiBzdHJpbmcsIGNvbmZpZzogU2lkZWJhckNvbmZpZyB9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlTWF0Y2hpbmdDb25maWcgKHJlZ3VsYXJQYXRoLCBjb25maWcpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY29uZmlnKSkge1xuICAgIHJldHVybiB7XG4gICAgICBiYXNlOiAnLycsXG4gICAgICBjb25maWc6IGNvbmZpZ1xuICAgIH1cbiAgfVxuICBmb3IgKGNvbnN0IGJhc2UgaW4gY29uZmlnKSB7XG4gICAgaWYgKGVuc3VyZUVuZGluZ1NsYXNoKHJlZ3VsYXJQYXRoKS5pbmRleE9mKGVuY29kZVVSSShiYXNlKSkgPT09IDApIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJhc2UsXG4gICAgICAgIGNvbmZpZzogY29uZmlnW2Jhc2VdXG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB7fVxufVxuXG5mdW5jdGlvbiBlbnN1cmVFbmRpbmdTbGFzaCAocGF0aCkge1xuICByZXR1cm4gLyhcXC5odG1sfFxcLykkLy50ZXN0KHBhdGgpXG4gICAgPyBwYXRoXG4gICAgOiBwYXRoICsgJy8nXG59XG5cbmZ1bmN0aW9uIHJlc29sdmVJdGVtIChpdGVtLCBwYWdlcywgYmFzZSwgZ3JvdXBEZXB0aCA9IDEpIHtcbiAgaWYgKHR5cGVvZiBpdGVtID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiByZXNvbHZlUGFnZShwYWdlcywgaXRlbSwgYmFzZSlcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocmVzb2x2ZVBhZ2UocGFnZXMsIGl0ZW1bMF0sIGJhc2UpLCB7XG4gICAgICB0aXRsZTogaXRlbVsxXVxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBpdGVtLmNoaWxkcmVuIHx8IFtdXG4gICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA9PT0gMCAmJiBpdGVtLnBhdGgpIHtcbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHJlc29sdmVQYWdlKHBhZ2VzLCBpdGVtLnBhdGgsIGJhc2UpLCB7XG4gICAgICAgIHRpdGxlOiBpdGVtLnRpdGxlXG4gICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ2dyb3VwJyxcbiAgICAgIHBhdGg6IGl0ZW0ucGF0aCxcbiAgICAgIHRpdGxlOiBpdGVtLnRpdGxlLFxuICAgICAgc2lkZWJhckRlcHRoOiBpdGVtLnNpZGViYXJEZXB0aCxcbiAgICAgIGluaXRpYWxPcGVuR3JvdXBJbmRleDogaXRlbS5pbml0aWFsT3Blbkdyb3VwSW5kZXgsXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW4ubWFwKGNoaWxkID0+IHJlc29sdmVJdGVtKGNoaWxkLCBwYWdlcywgYmFzZSwgZ3JvdXBEZXB0aCArIDEpKSxcbiAgICAgIGNvbGxhcHNhYmxlOiBpdGVtLmNvbGxhcHNhYmxlICE9PSBmYWxzZVxuICAgIH1cbiAgfVxufVxuIiwiPHRlbXBsYXRlPlxuICA8Zm9vdGVyIGNsYXNzPVwicGFnZS1lZGl0XCI+XG5cbiAgICA8Ym90dG9tLWFkPjwvYm90dG9tLWFkPlxuICAgIDxkaXZcbiAgICAgIHYtaWY9XCJlZGl0TGlua1wiXG4gICAgICBjbGFzcz1cImVkaXQtbGlua1wiXG4gICAgPlxuICAgICAgPGFcbiAgICAgICAgOmhyZWY9XCJlZGl0TGlua1wiXG4gICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgPnt7IGVkaXRMaW5rVGV4dCB9fTwvYT5cbiAgICAgIDxPdXRib3VuZExpbmsgLz5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXZcbiAgICAgIHYtaWY9XCJsYXN0VXBkYXRlZFwiXG4gICAgICBjbGFzcz1cImxhc3QtdXBkYXRlZFwiXG4gICAgPlxuICAgICAgPHNwYW4gY2xhc3M9XCJwcmVmaXhcIj57eyBsYXN0VXBkYXRlZFRleHQgfX06PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ0aW1lXCI+e3sgbGFzdFVwZGF0ZWQgfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gIDwvZm9vdGVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBpc05pbCBmcm9tICdsb2Rhc2gvaXNOaWwnXG5pbXBvcnQgeyBlbmRpbmdTbGFzaFJFLCBvdXRib3VuZFJFIH0gZnJvbSAnLi4vdXRpbCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnUGFnZUVkaXQnLFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgbGFzdFVwZGF0ZWQgKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHBhZ2UubGFzdFVwZGF0ZWRcbiAgICB9LFxuXG4gICAgbGFzdFVwZGF0ZWRUZXh0ICgpIHtcbiAgICAgIGlmICh0eXBlb2YgdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubGFzdFVwZGF0ZWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZFxuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLmxhc3RVcGRhdGVkID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5sYXN0VXBkYXRlZFxuICAgICAgfVxuICAgICAgcmV0dXJuICdMYXN0IFVwZGF0ZWQnXG4gICAgfSxcblxuICAgIGVkaXRMaW5rICgpIHtcbiAgICAgIGNvbnN0IHNob3dFZGl0TGluayA9IGlzTmlsKHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIuZWRpdExpbmspXG4gICAgICAgID8gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5lZGl0TGlua3NcbiAgICAgICAgOiB0aGlzLiRwYWdlLmZyb250bWF0dGVyLmVkaXRMaW5rXG5cbiAgICAgIGNvbnN0IHtcbiAgICAgICAgcmVwbyxcbiAgICAgICAgZG9jc0RpciA9ICcnLFxuICAgICAgICBkb2NzQnJhbmNoID0gJ21hc3RlcicsXG4gICAgICAgIGRvY3NSZXBvID0gcmVwb1xuICAgICAgfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWdcblxuICAgICAgaWYgKHNob3dFZGl0TGluayAmJiBkb2NzUmVwbyAmJiB0aGlzLiRwYWdlLnJlbGF0aXZlUGF0aCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVFZGl0TGluayhcbiAgICAgICAgICByZXBvLFxuICAgICAgICAgIGRvY3NSZXBvLFxuICAgICAgICAgIGRvY3NEaXIsXG4gICAgICAgICAgZG9jc0JyYW5jaCxcbiAgICAgICAgICB0aGlzLiRwYWdlLnJlbGF0aXZlUGF0aFxuICAgICAgICApXG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH0sXG5cbiAgICBlZGl0TGlua1RleHQgKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgdGhpcy4kdGhlbWVMb2NhbGVDb25maWcuZWRpdExpbmtUZXh0XG4gICAgICAgIHx8IHRoaXMuJHNpdGUudGhlbWVDb25maWcuZWRpdExpbmtUZXh0XG4gICAgICAgIHx8IGBFZGl0IHRoaXMgcGFnZWBcbiAgICAgIClcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGNyZWF0ZUVkaXRMaW5rIChyZXBvLCBkb2NzUmVwbywgZG9jc0RpciwgZG9jc0JyYW5jaCwgcGF0aCkge1xuICAgICAgY29uc3QgYml0YnVja2V0ID0gL2JpdGJ1Y2tldC5vcmcvXG4gICAgICBpZiAoYml0YnVja2V0LnRlc3QoZG9jc1JlcG8pKSB7XG4gICAgICAgIGNvbnN0IGJhc2UgPSBkb2NzUmVwb1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJylcbiAgICAgICAgICArIGAvc3JjYFxuICAgICAgICAgICsgYC8ke2RvY3NCcmFuY2h9L2BcbiAgICAgICAgICArIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKVxuICAgICAgICAgICsgcGF0aFxuICAgICAgICAgICsgYD9tb2RlPWVkaXQmc3BhPTAmYXQ9JHtkb2NzQnJhbmNofSZmaWxldmlld2VyPWZpbGUtdmlldy1kZWZhdWx0YFxuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGdpdGxhYiA9IC9naXRsYWIuY29tL1xuICAgICAgaWYgKGdpdGxhYi50ZXN0KGRvY3NSZXBvKSkge1xuICAgICAgICBjb25zdCBiYXNlID0gZG9jc1JlcG9cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICBiYXNlLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpXG4gICAgICAgICAgKyBgLy0vZWRpdGBcbiAgICAgICAgICArIGAvJHtkb2NzQnJhbmNofS9gXG4gICAgICAgICAgKyAoZG9jc0RpciA/IGRvY3NEaXIucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKyAnLycgOiAnJylcbiAgICAgICAgICArIHBhdGhcbiAgICAgICAgKVxuICAgICAgfVxuXG4gICAgICBjb25zdCBiYXNlID0gb3V0Ym91bmRSRS50ZXN0KGRvY3NSZXBvKVxuICAgICAgICA/IGRvY3NSZXBvXG4gICAgICAgIDogYGh0dHBzOi8vZ2l0aHViLmNvbS8ke2RvY3NSZXBvfWBcbiAgICAgIHJldHVybiAoXG4gICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJylcbiAgICAgICAgKyAnL2VkaXQnXG4gICAgICAgICsgYC8ke2RvY3NCcmFuY2h9L2BcbiAgICAgICAgKyAoZG9jc0RpciA/IGRvY3NEaXIucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKyAnLycgOiAnJylcbiAgICAgICAgKyBwYXRoXG4gICAgICApXG4gICAgfVxuICB9XG59XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzdHlsdXNcIj5cbkByZXF1aXJlICcuLi9zdHlsZXMvd3JhcHBlci5zdHlsJ1xuXG4ucGFnZS1lZGl0XG4gIEBleHRlbmQgJHdyYXBwZXJcbiAgcGFkZGluZy10b3AgMXJlbVxuICBwYWRkaW5nLWJvdHRvbSAxcmVtXG4gIG92ZXJmbG93IGF1dG9cblxuICAuZWRpdC1saW5rXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBhXG4gICAgICBjb2xvciBsaWdodGVuKCR0ZXh0Q29sb3IsIDI1JSlcbiAgICAgIG1hcmdpbi1yaWdodCAwLjI1cmVtXG4gIC5sYXN0LXVwZGF0ZWRcbiAgICBmbG9hdCByaWdodFxuICAgIGZvbnQtc2l6ZSAwLjllbVxuICAgIC5wcmVmaXhcbiAgICAgIGZvbnQtd2VpZ2h0IDUwMFxuICAgICAgY29sb3IgbGlnaHRlbigkdGV4dENvbG9yLCAyNSUpXG4gICAgLnRpbWVcbiAgICAgIGZvbnQtd2VpZ2h0IDQwMFxuICAgICAgY29sb3IgIzc2NzY3NlxuXG5AbWVkaWEgKG1heC13aWR0aDogJE1RTW9iaWxlKVxuICAucGFnZS1lZGl0XG4gICAgLmVkaXQtbGlua1xuICAgICAgbWFyZ2luLWJvdHRvbSAwLjVyZW1cbiAgICAubGFzdC11cGRhdGVkXG4gICAgICBmb250LXNpemUgMC44ZW1cbiAgICAgIGZsb2F0IG5vbmVcbiAgICAgIHRleHQtYWxpZ24gbGVmdFxuXG48L3N0eWxlPlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTMtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0zLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlRWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTMtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0zLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlRWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vUGFnZUVkaXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTQ5NWVhNzUzXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vUGFnZUVkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL1BhZ2VFZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL1BhZ2VFZGl0LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTQ5NWVhNzUzJnByb2QmbGFuZz1zdHlsdXNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIChfdm0ucHJldiB8fCBfdm0ubmV4dCk/X2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicGFnZS1uYXZcIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6XCJpbm5lclwifSxbKF92bS5wcmV2KT9fYygnc3Bhbicse3N0YXRpY0NsYXNzOlwicHJldlwifSxbX3ZtLl92KFwiXFxuICAgICAg4oaQXFxuICAgICAgXCIpLChfdm0ucHJldi50eXBlID09PSAnZXh0ZXJuYWwnKT9fYygnYScse3N0YXRpY0NsYXNzOlwicHJldlwiLGF0dHJzOntcImhyZWZcIjpfdm0ucHJldi5wYXRoLFwidGFyZ2V0XCI6XCJfYmxhbmtcIixcInJlbFwiOlwibm9vcGVuZXIgbm9yZWZlcnJlclwifX0sW192bS5fdihcIlxcbiAgICAgICAgXCIrX3ZtLl9zKF92bS5wcmV2LnRpdGxlIHx8IF92bS5wcmV2LnBhdGgpK1wiXFxuXFxuICAgICAgICBcIiksX2MoJ091dGJvdW5kTGluaycpXSwxKTpfYygnUm91dGVyTGluaycse3N0YXRpY0NsYXNzOlwicHJldlwiLGF0dHJzOntcInRvXCI6X3ZtLnByZXYucGF0aH19LFtfdm0uX3YoXCJcXG4gICAgICAgIFwiK192bS5fcyhfdm0ucHJldi50aXRsZSB8fCBfdm0ucHJldi5wYXRoKStcIlxcbiAgICAgIFwiKV0pXSwxKTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLChfdm0ubmV4dCk/X2MoJ3NwYW4nLHtzdGF0aWNDbGFzczpcIm5leHRcIn0sWyhfdm0ubmV4dC50eXBlID09PSAnZXh0ZXJuYWwnKT9fYygnYScse2F0dHJzOntcImhyZWZcIjpfdm0ubmV4dC5wYXRoLFwidGFyZ2V0XCI6XCJfYmxhbmtcIixcInJlbFwiOlwibm9vcGVuZXIgbm9yZWZlcnJlclwifX0sW192bS5fdihcIlxcbiAgICAgICAgXCIrX3ZtLl9zKF92bS5uZXh0LnRpdGxlIHx8IF92bS5uZXh0LnBhdGgpK1wiXFxuXFxuICAgICAgICBcIiksX2MoJ091dGJvdW5kTGluaycpXSwxKTpfYygnUm91dGVyTGluaycse2F0dHJzOntcInRvXCI6X3ZtLm5leHQucGF0aH19LFtfdm0uX3YoXCJcXG4gICAgICAgIFwiK192bS5fcyhfdm0ubmV4dC50aXRsZSB8fCBfdm0ubmV4dC5wYXRoKStcIlxcbiAgICAgIFwiKV0pLF92bS5fdihcIlxcbiAgICAgIOKGklxcbiAgICBcIildLDEpOl92bS5fZSgpXSldKTpfdm0uX2UoKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxkaXZcbiAgICB2LWlmPVwicHJldiB8fCBuZXh0XCJcbiAgICBjbGFzcz1cInBhZ2UtbmF2XCJcbiAgPlxuICAgIDxwIGNsYXNzPVwiaW5uZXJcIj5cbiAgICAgIDxzcGFuXG4gICAgICAgIHYtaWY9XCJwcmV2XCJcbiAgICAgICAgY2xhc3M9XCJwcmV2XCJcbiAgICAgID5cbiAgICAgICAg4oaQXG4gICAgICAgIDxhXG4gICAgICAgICAgdi1pZj1cInByZXYudHlwZSA9PT0gJ2V4dGVybmFsJ1wiXG4gICAgICAgICAgY2xhc3M9XCJwcmV2XCJcbiAgICAgICAgICA6aHJlZj1cInByZXYucGF0aFwiXG4gICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgPlxuICAgICAgICAgIHt7IHByZXYudGl0bGUgfHwgcHJldi5wYXRoIH19XG5cbiAgICAgICAgICA8T3V0Ym91bmRMaW5rIC8+XG4gICAgICAgIDwvYT5cblxuICAgICAgICA8Um91dGVyTGlua1xuICAgICAgICAgIHYtZWxzZVxuICAgICAgICAgIGNsYXNzPVwicHJldlwiXG4gICAgICAgICAgOnRvPVwicHJldi5wYXRoXCJcbiAgICAgICAgPlxuICAgICAgICAgIHt7IHByZXYudGl0bGUgfHwgcHJldi5wYXRoIH19XG4gICAgICAgIDwvUm91dGVyTGluaz5cbiAgICAgIDwvc3Bhbj5cblxuICAgICAgPHNwYW5cbiAgICAgICAgdi1pZj1cIm5leHRcIlxuICAgICAgICBjbGFzcz1cIm5leHRcIlxuICAgICAgPlxuICAgICAgICA8YVxuICAgICAgICAgIHYtaWY9XCJuZXh0LnR5cGUgPT09ICdleHRlcm5hbCdcIlxuICAgICAgICAgIDpocmVmPVwibmV4dC5wYXRoXCJcbiAgICAgICAgICB0YXJnZXQ9XCJfYmxhbmtcIlxuICAgICAgICAgIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgICA+XG4gICAgICAgICAge3sgbmV4dC50aXRsZSB8fCBuZXh0LnBhdGggfX1cblxuICAgICAgICAgIDxPdXRib3VuZExpbmsgLz5cbiAgICAgICAgPC9hPlxuXG4gICAgICAgIDxSb3V0ZXJMaW5rXG4gICAgICAgICAgdi1lbHNlXG4gICAgICAgICAgOnRvPVwibmV4dC5wYXRoXCJcbiAgICAgICAgPlxuICAgICAgICAgIHt7IG5leHQudGl0bGUgfHwgbmV4dC5wYXRoIH19XG4gICAgICAgIDwvUm91dGVyTGluaz5cbiAgICAgICAg4oaSXG4gICAgICA8L3NwYW4+XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyByZXNvbHZlUGFnZSB9IGZyb20gJy4uL3V0aWwnXG5pbXBvcnQgaXNTdHJpbmcgZnJvbSAnbG9kYXNoL2lzU3RyaW5nJ1xuaW1wb3J0IGlzTmlsIGZyb20gJ2xvZGFzaC9pc05pbCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnUGFnZU5hdicsXG5cbiAgcHJvcHM6IFsnc2lkZWJhckl0ZW1zJ10sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBwcmV2ICgpIHtcbiAgICAgIHJldHVybiByZXNvbHZlUGFnZUxpbmsoTElOS19UWVBFUy5QUkVWLCB0aGlzKVxuICAgIH0sXG5cbiAgICBuZXh0ICgpIHtcbiAgICAgIHJldHVybiByZXNvbHZlUGFnZUxpbmsoTElOS19UWVBFUy5ORVhULCB0aGlzKVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiByZXNvbHZlUHJldiAocGFnZSwgaXRlbXMpIHtcbiAgcmV0dXJuIGZpbmQocGFnZSwgaXRlbXMsIC0xKVxufVxuXG5mdW5jdGlvbiByZXNvbHZlTmV4dCAocGFnZSwgaXRlbXMpIHtcbiAgcmV0dXJuIGZpbmQocGFnZSwgaXRlbXMsIDEpXG59XG5cbmNvbnN0IExJTktfVFlQRVMgPSB7XG4gIE5FWFQ6IHtcbiAgICByZXNvbHZlTGluazogcmVzb2x2ZU5leHQsXG4gICAgZ2V0VGhlbWVMaW5rQ29uZmlnOiAoeyBuZXh0TGlua3MgfSkgPT4gbmV4dExpbmtzLFxuICAgIGdldFBhZ2VMaW5rQ29uZmlnOiAoeyBmcm9udG1hdHRlciB9KSA9PiBmcm9udG1hdHRlci5uZXh0XG4gIH0sXG4gIFBSRVY6IHtcbiAgICByZXNvbHZlTGluazogcmVzb2x2ZVByZXYsXG4gICAgZ2V0VGhlbWVMaW5rQ29uZmlnOiAoeyBwcmV2TGlua3MgfSkgPT4gcHJldkxpbmtzLFxuICAgIGdldFBhZ2VMaW5rQ29uZmlnOiAoeyBmcm9udG1hdHRlciB9KSA9PiBmcm9udG1hdHRlci5wcmV2XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVBhZ2VMaW5rIChcbiAgbGlua1R5cGUsXG4gIHsgJHRoZW1lQ29uZmlnLCAkcGFnZSwgJHJvdXRlLCAkc2l0ZSwgc2lkZWJhckl0ZW1zIH1cbikge1xuICBjb25zdCB7IHJlc29sdmVMaW5rLCBnZXRUaGVtZUxpbmtDb25maWcsIGdldFBhZ2VMaW5rQ29uZmlnIH0gPSBsaW5rVHlwZVxuXG4gIC8vIEdldCBsaW5rIGNvbmZpZyBmcm9tIHRoZW1lXG4gIGNvbnN0IHRoZW1lTGlua0NvbmZpZyA9IGdldFRoZW1lTGlua0NvbmZpZygkdGhlbWVDb25maWcpXG5cbiAgLy8gR2V0IGxpbmsgY29uZmlnIGZyb20gY3VycmVudCBwYWdlXG4gIGNvbnN0IHBhZ2VMaW5rQ29uZmlnID0gZ2V0UGFnZUxpbmtDb25maWcoJHBhZ2UpXG5cbiAgLy8gUGFnZSBsaW5rIGNvbmZpZyB3aWxsIG92ZXJ3cml0ZSBnbG9iYWwgdGhlbWUgbGluayBjb25maWcgaWYgZGVmaW5lZFxuICBjb25zdCBsaW5rID0gaXNOaWwocGFnZUxpbmtDb25maWcpID8gdGhlbWVMaW5rQ29uZmlnIDogcGFnZUxpbmtDb25maWdcblxuICBpZiAobGluayA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm5cbiAgfSBlbHNlIGlmIChpc1N0cmluZyhsaW5rKSkge1xuICAgIHJldHVybiByZXNvbHZlUGFnZSgkc2l0ZS5wYWdlcywgbGluaywgJHJvdXRlLnBhdGgpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlc29sdmVMaW5rKCRwYWdlLCBzaWRlYmFySXRlbXMpXG4gIH1cbn1cblxuZnVuY3Rpb24gZmluZCAocGFnZSwgaXRlbXMsIG9mZnNldCkge1xuICBjb25zdCByZXMgPSBbXVxuICBmbGF0dGVuKGl0ZW1zLCByZXMpXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY3VyID0gcmVzW2ldXG4gICAgaWYgKGN1ci50eXBlID09PSAncGFnZScgJiYgY3VyLnBhdGggPT09IGRlY29kZVVSSUNvbXBvbmVudChwYWdlLnBhdGgpKSB7XG4gICAgICByZXR1cm4gcmVzW2kgKyBvZmZzZXRdXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW4gKGl0ZW1zLCByZXMpIHtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBpZiAoaXRlbXNbaV0udHlwZSA9PT0gJ2dyb3VwJykge1xuICAgICAgZmxhdHRlbihpdGVtc1tpXS5jaGlsZHJlbiB8fCBbXSwgcmVzKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXMucHVzaChpdGVtc1tpXSlcbiAgICB9XG4gIH1cbn1cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInN0eWx1c1wiPlxuQHJlcXVpcmUgJy4uL3N0eWxlcy93cmFwcGVyLnN0eWwnXG5cbi5wYWdlLW5hdlxuICBAZXh0ZW5kICR3cmFwcGVyXG4gIHBhZGRpbmctdG9wIDFyZW1cbiAgcGFkZGluZy1ib3R0b20gMFxuICAuaW5uZXJcbiAgICBtaW4taGVpZ2h0IDJyZW1cbiAgICBtYXJnaW4tdG9wIDBcbiAgICBib3JkZXItdG9wIDFweCBzb2xpZCAkYm9yZGVyQ29sb3JcbiAgICBwYWRkaW5nLXRvcCAxcmVtXG4gICAgb3ZlcmZsb3cgYXV0byAvLyBjbGVhciBmbG9hdFxuICAubmV4dFxuICAgIGZsb2F0IHJpZ2h0XG48L3N0eWxlPlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMy0wIS4uLy4uLy4uL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMy0xIS4uLy4uLy4uL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlTmF2LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0zLTEhLi4vLi4vLi4vdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1BhZ2VOYXYudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1BhZ2VOYXYudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJjMDdkNDNlXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vUGFnZU5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuZXhwb3J0ICogZnJvbSBcIi4vUGFnZU5hdi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9QYWdlTmF2LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJjMDdkNDNlJnByb2QmbGFuZz1zdHlsdXNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF92bT10aGlzLF9jPV92bS5fc2VsZi5fYztyZXR1cm4gX2MoJ2RpdicsW19jKCdlbC1kaWFsb2cnLHtyZWY6XCJteUVsZW1lbnRcIixzdGF0aWNDbGFzczpcIm5vdmlwXCIsYXR0cnM6e1wiaWRcIjpcInZpcC1ib3hcIixcInRpdGxlXCI6J+W5v+WRiicsXCJ2aXNpYmxlXCI6X3ZtLnFyRGlhbG9nLFwid2lkdGhcIjpcIjYwMHB4XCIsXCJjbG9zZS1vbi1jbGljay1tb2RhbFwiOmZhbHNlLFwiY2xvc2Utb24tcHJlc3MtZXNjYXBlXCI6ZmFsc2UsXCJzaG93LWNsb3NlXCI6ZmFsc2V9LG9uOntcInVwZGF0ZTp2aXNpYmxlXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0ucXJEaWFsb2c9JGV2ZW50fX0sc2NvcGVkU2xvdHM6X3ZtLl91KFt7a2V5OlwiZm9vdGVyXCIsZm46ZnVuY3Rpb24oKXtyZXR1cm4gW19jKCdkaXYnLFtfYygnZWwtYnV0dG9uJyx7YXR0cnM6e1widHlwZVwiOlwicHJpbWFyeVwifSxvbjp7XCJjbGlja1wiOmZ1bmN0aW9uKCRldmVudCl7JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO3JldHVybiBfdm0uY2hlY2tFbmQuYXBwbHkobnVsbCwgYXJndW1lbnRzKX19fSxbX3ZtLl92KFwi5bey57uP55yL5a6MXCIpXSldLDEpXX0scHJveHk6dHJ1ZX1dKX0sW19jKCdkaXYnLFtfYygnaDMnLFtfdm0uX3YoXCLor7fkvb/nlKjlvq7kv6HmiavnoIFcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm10LTFcIn0sW192bS5fdihcIuaJq+eggeWQjuivt+eCueWHu+KAnOaJk+W8gOW5v+WRiuKAneiTneiJsuaMiemSrlwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2RpdicsW192bS5fdihcIlxcbiAgICAgICAg5oSf6LCi5a+55byA5rqQ6L2v5Lu255qE5pSv5oyB5LiO55CG6Kej77yM546w6Zi25q616KeC55yL5bm/5ZGK5bCG5pyJ5Yqp5LqOdXZpZXctcGx1c+eahOWPr+aMgee7reWPkeWxle+8jOeJueWIq+aYr+WcqOm4v+iSmeOAgXVuaS1hcHAteOetieaWuemdoueahOW8gOWPke+8jOaIkeS7rOS5n+WcqOenr+aegeaOoue0ouabtOWlveeahOWPr+aMgee7reWPkeWxleaooeW8j++8jOS7peaKleWFpeabtOWkmueahOeglOWPkeiDveWKm+S+v+S6juaPkOS+m+abtOWKoOWlveeUqOeahOahhuaetuOAguaUtumbhuS6huWkp+WutueahOaEj+ingeWPjemmiOaIkeS7rOato+WcqOinhOWIkuaOqOWHuuekvuWMuuWPkeW4luiOt+W+l+WFjeW5v+WRiueCueaVsO+8jOiHquWqkuS9k+WPkeefreinhumikeaVmeeoi+iOt+W+l+W5v+WRiueCueaVsO+8jOaPkOS6pEZhc3RWaWV35Y+v6KeG5YyW5qih5p2/6YCB5bm/5ZGK54K55pWw77yM5o+Q5Lqk6aG555uu57q/5LiK5qGI5L6L6YCB5bm/5ZGK54K55pWw77yM5biu5Yqp5YW25a6D55So5oi36Kej5Yaz6Zeu6aKY6YCB5bm/5ZGK54K55pWw562J5aSa56eN5pa55rOV77yM5biM5pyb6IO95aSf6YCC5bqU5LiN6YCa55qE6ZyA5rGC77yM5bm25LiU6IO956ev5p6B5o6o5YqodXZpZXctcGx1c+WPkeWxleOAglxcbiAgICAgIFwiKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse2RpcmVjdGl2ZXM6W3tuYW1lOlwibG9hZGluZ1wiLHJhd05hbWU6XCJ2LWxvYWRpbmdcIix2YWx1ZTooX3ZtLnFyVXJsID8gZmFsc2UgOiB0cnVlKSxleHByZXNzaW9uOlwicXJVcmwgPyBmYWxzZSA6IHRydWVcIn1dLHN0YXRpY0NsYXNzOlwicHQtM1wifSxbKF92bS5xclVybCk/X2MoJ2ltZycse2F0dHJzOntcInNyY1wiOl92bS5xclVybCxcImFsdFwiOlwibWluZFwifX0pOl92bS5fZSgpXSldKV0pXSwxKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPCEtLSA8ZWwtZGlhbG9nXG4gICAgICA6dGl0bGU9XCIn5aaC6ZyA5omT5byA5paH5qGj6K+36YCJ5oup5Lul5LiL6YCJ6aG5J1wiXG4gICAgICB2aXNpYmxlLnN5bmM9XCJhZERpYWxvZ1wiXG4gICAgICA6Y2xvc2Utb24tY2xpY2stbW9kYWw9XCJmYWxzZVwiXG4gICAgICA6Y2xvc2Utb24tcHJlc3MtZXNjYXBlPVwiZmFsc2VcIlxuICAgICAgd2lkdGg9XCI2MDBweFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImxoLTIgcHktNSBmbGV4IGp1c3RpZnktYXJvdW5kXCI+XG4gICAgICAgIDxyb3V0ZXItbGluayB0bz1cIi91c2VyL3ZpcFwiIGNsYXNzPVwibWItNCAgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgZmxleC1jb2xcIj5cbiAgICAgICAgICA8c3ZnIHQ9XCIxNzMwODA0MjEwMDc0XCIgY2xhc3M9XCJpY29uXCIgdmlld0JveD1cIjAgMCAxMDI0IDEwMjRcIiB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHAtaWQ9XCI0MzE3XCIgd2lkdGg9XCI2NFwiIGhlaWdodD1cIjY0XCI+PHBhdGggZD1cIk04MTIuMTM3OTMxIDM1OS44MTI0MTRhNTIuOTY1NTE3IDUyLjk2NTUxNyAwIDAgMS0yNC43MTcyNDEtNi43MDg5NjZsLTE2My4zMTAzNDUgMTM3LjAwNDEzOC05MC4wNDEzNzktMTk0LjIwNjg5NmE2NC42MTc5MzEgNjQuNjE3OTMxIDAgMCAxLTQ0LjQ5MTAzNSAwbC05MC4wNDEzNzkgMTk0LjIwNjg5NkwyMzYuNTc5MzEgMzUzLjEwMzQ0OGE1Mi45NjU1MTcgNTIuOTY1NTE3IDAgMCAxLTI0LjcxNzI0MSA2LjM1NTg2MmgtNC45NDM0NDhMMzM0LjIxMjQxNCA3NzYuODI3NTg2aDM1NS41NzUxNzJsMTI3LjQ3MDM0NS00MTcuNTQ0ODI3elwiIGZpbGw9XCIjRjQ5NjAwXCIgcC1pZD1cIjQzMThcIj48L3BhdGg+PHBhdGggZD1cIk0wIDBtMjgyLjQ4Mjc1OSAwbDQ1OS4wMzQ0ODIgMHEyODIuNDgyNzU5IDAgMjgyLjQ4Mjc1OSAyODIuNDgyNzU5bDAgNDU5LjAzNDQ4MnEwIDI4Mi40ODI3NTktMjgyLjQ4Mjc1OSAyODIuNDgyNzU5bC00NTkuMDM0NDgyIDBxLTI4Mi40ODI3NTkgMC0yODIuNDgyNzU5LTI4Mi40ODI3NTlsMC00NTkuMDM0NDgycTAtMjgyLjQ4Mjc1OSAyODIuNDgyNzU5LTI4Mi40ODI3NTlaXCIgZmlsbD1cIiNGRkE2NThcIiBwLWlkPVwiNDMxOVwiPjwvcGF0aD48cGF0aCBkPVwiTTg1My4yNzQ0ODMgMzI0LjUwMjA2OWEzMS43NzkzMSAzMS43NzkzMSAwIDEgMC0zOC4xMzUxNzMgMzEuMDczMTAzbC0xODEuNDk1MTcyIDE1Mi41NDA2OS0xMDEuNjkzNzkzLTIyMC41MTMxMDNhNDIuMDE5MzEgNDIuMDE5MzEgMCAxIDAtMjEuMDA5NjU1IDBsLTEwMS44NzAzNDUgMjIwLjUxMzEwMy0xODEuNDk1MTczLTE1Mi41NDA2OWEzMS43NzkzMSAzMS43NzkzMSAwIDEgMC0xNy42NTUxNzItMS43NjU1MTdsMTM0LjM1NTg2MiA0NDEuMzc5MzExaDM1NC44Njg5NjZsMTM0LjM1NTg2Mi00NDEuMzc5MzExYTMxLjc3OTMxIDMxLjc3OTMxIDAgMCAwIDE5Ljc3Mzc5My0yOS4zMDc1ODZ6XCIgZmlsbD1cIiNGRjk0MkVcIiBwLWlkPVwiNDMyMFwiPjwvcGF0aD48cGF0aCBkPVwiTTg0My45MTcyNDEgMzA2Ljg0Njg5N2EzMS43NzkzMSAzMS43NzkzMSAwIDEgMC0zOC4xMzUxNzIgMzEuMDczMTAzbC0xODEuNDk1MTcyIDE1Mi41NDA2OS0xMDEuNjkzNzk0LTIyMC41MTMxMDRhNDIuMDE5MzEgNDIuMDE5MzEgMCAxIDAtMjEuMDA5NjU1IDBsLTEwMS44NzAzNDUgMjIwLjUxMzEwNC0xODEuNDk1MTcyLTE1Mi41NDA2OWEzMS43NzkzMSAzMS43NzkzMSAwIDEgMC0xNy42NTUxNzItMS43NjU1MTdsMTM0LjM1NTg2MiA0NDEuMzc5MzFoMzU0Ljg2ODk2NWwxMzQuMzU1ODYyLTQ0MS4zNzkzMWEzMS43NzkzMSAzMS43NzkzMSAwIDAgMCAxOS43NzM3OTMtMjkuMzA3NTg2elwiIGZpbGw9XCIjRkZDRDMwXCIgcC1pZD1cIjQzMjFcIj48L3BhdGg+PHBhdGggZD1cIk04MTIuMTM3OTMxIDM3MS45OTQ0ODNoLTQuMjM3MjQxbC0xODMuNjEzNzkzIDE1NC4xMjk2NTUtMTAyLjA0Njg5Ny0yMjEuNTcyNDE0YTM2LjU0NjIwNyAzNi41NDYyMDcgMCAwIDEtOS4wMDQxMzggMS4yMzU4NjIgMzUuMzEwMzQ1IDM1LjMxMDM0NSAwIDAgMS0xMC45NDYyMDctMS43NjU1MTdsLTEwMi40IDIyMS43NDg5NjUtMTgyLjczMTAzNC0xNTMuNDIzNDQ4YTM3Ljk1ODYyMSAzNy45NTg2MjEgMCAwIDEtNy40MTUxNzMgMCAzNS4zMTAzNDUgMzUuMzEwMzQ1IDAgMCAxLTkuNzEwMzQ1LTEuNDEyNDE0bDIwLjEyNjg5NyA2NS44NTM3OTRMNDM1LjAyMzQ0OCA2MjMuMjI3NTg2IDUxMiAzOTcuNTk0NDgzbDk0LjYzMTcyNCAyMjUuNjMzMTAzTDgwMy4zMTAzNDUgNDM5Ljc5MDM0NWwyMS4zNjI3NTgtNzAuNjIwNjlhMzUuMzEwMzQ1IDM1LjMxMDM0NSAwIDAgMS0xMi41MzUxNzIgMi44MjQ4Mjh6XCIgZmlsbD1cIiNGRkE2NThcIiBwLWlkPVwiNDMyMlwiPjwvcGF0aD48cGF0aCBkPVwiTTgxMi4xMzc5MzEgMzU0LjMzOTMxaC00LjIzNzI0MWwtMTgzLjYxMzc5MyAxNTQuMTI5NjU2LTEwMi4wNDY4OTctMjIxLjU3MjQxNGEzNi41NDYyMDcgMzYuNTQ2MjA3IDAgMCAxLTkuMDA0MTM4IDEuMjM1ODYyIDM1LjMxMDM0NSAzNS4zMTAzNDUgMCAwIDEtMTAuOTQ2MjA3LTEuNzY1NTE3bC0xMDIuNCAyMjEuNzQ4OTY1LTE4Mi43MzEwMzQtMTUzLjQyMzQ0OGEzNy45NTg2MjEgMzcuOTU4NjIxIDAgMCAxLTcuNDE1MTczIDAgMzUuMzEwMzQ1IDM1LjMxMDM0NSAwIDAgMS05LjcxMDM0NS0xLjQxMjQxNGwyMC4xMjY4OTcgNjUuODUzNzkzTDQzNS4wMjM0NDggNjA1LjU3MjQxNCA1MTIgMzc5LjkzOTMxbDk0LjYzMTcyNCAyMjUuNjMzMTA0TDgwMy4zMTAzNDUgNDIyLjEzNTE3MmwyMS4zNjI3NTgtNzAuNjIwNjg5YTM1LjMxMDM0NSAzNS4zMTAzNDUgMCAwIDEtMTIuNTM1MTcyIDIuODI0ODI3elwiIGZpbGw9XCIjRkY5NDJFXCIgcC1pZD1cIjQzMjNcIj48L3BhdGg+PHBhdGggZD1cIk04MTIuMTM3OTMxIDMzNi42ODQxMzhoLTQuMjM3MjQxbC0xODMuNjEzNzkzIDE1NC4xMjk2NTUtMTAyLjA0Njg5Ny0yMjEuNTcyNDE0YTM2LjU0NjIwNyAzNi41NDYyMDcgMCAwIDEtOS4wMDQxMzggMS4yMzU4NjIgMzUuMzEwMzQ1IDM1LjMxMDM0NSAwIDAgMS0xMC45NDYyMDctMS43NjU1MTdsLTEwMi40IDIyMS43NDg5NjYtMTgyLjczMTAzNC0xNTMuNDIzNDQ5YTM3Ljk1ODYyMSAzNy45NTg2MjEgMCAwIDEtNy40MTUxNzMgMCAzNS4zMTAzNDUgMzUuMzEwMzQ1IDAgMCAxLTkuNzEwMzQ1LTEuNDEyNDEzbDIwLjEyNjg5NyA2NS44NTM3OTNMNDM1LjAyMzQ0OCA1ODcuOTE3MjQxIDUxMiAzNjIuMjg0MTM4bDk0LjYzMTcyNCAyMjUuNjMzMTAzTDgwMy4zMTAzNDUgNDA0LjQ4bDIxLjM2Mjc1OC03MC42MjA2OWEzNS4zMTAzNDUgMzUuMzEwMzQ1IDAgMCAxLTEyLjUzNTE3MiAyLjgyNDgyOHpcIiBmaWxsPVwiI0ZGRkEzOVwiIHAtaWQ9XCI0MzI0XCI+PC9wYXRoPjwvc3ZnPlxuICAgICAgICAgIDxoMyBjbGFzcz1cImZvbnQtYm9sZFwiPuW8gOmAmuS8muWRmOWOu+W5v+WRijwvaDM+XG4gICAgICAgIDwvcm91dGVyLWxpbms+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjdXJzb3ItcG9pbnRlciBtYi00IGZsZXgganVzdGlmeS1jZW50ZXIgZmxleC1jb2wgaXRlbXMtY2VudGVyXCIgQGNsaWNrPVwid2F0Y2hBZFwiPlxuICAgICAgICAgIDxzdmcgdD1cIjE3MzA4MDQyNTcwMjBcIiBjbGFzcz1cImljb25cIiB2aWV3Qm94PVwiMCAwIDEwMjQgMTAyNFwiIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgcC1pZD1cIjYyNzhcIiB3aWR0aD1cIjY0XCIgaGVpZ2h0PVwiNjRcIj48cGF0aCBkPVwiTTkxMC4yMjIyMjIgMTAyNEgxMTMuNzc3Nzc4QTExMy43Nzc3NzggMTEzLjc3Nzc3OCAwIDAgMSAwIDkxMC4yMjIyMjJWMjg0LjQ0NDQ0NGgxMDI0djYyNS43Nzc3NzhhMTEzLjc3Nzc3OCAxMTMuNzc3Nzc4IDAgMCAxLTExMy43Nzc3NzggMTEzLjc3Nzc3OHpNNjg5Ljk0ODQ0NCA2MDQuNzI4ODg5TDQ2NC4yMTMzMzMgNDYzLjg3MmE1OC43NDM0NjcgNTguNzQzNDY3IDAgMCAwLTg4Ljc0NjY2NiA1Mi43OTI4ODl2Mjc1LjExNDY2N2E1OC43NDM0NjcgNTguNzQzNDY3IDAgMCAwIDg4Ljc0NjY2NiA1Mi43OTI4ODhsMjI1LjczNTExMS0xNDAuODU2ODg4YTU5LjE2NDQ0NCA1OS4xNjQ0NDQgMCAwIDAgMC05OC45ODY2Njd6TTgxNC4xOTM3NzggMEg5MTAuMjIyMjIyYTExMy43Nzc3NzggMTEzLjc3Nzc3OCAwIDAgMSAxMTMuNzc3Nzc4IDExMy43Nzc3Nzh2MTAyLjRoLTg0Ljk5MnogbS05MS4zNjM1NTYgMjE2LjE3Nzc3OEw1OTguMDE2IDBoMTUwLjQxNDIyMmwxMjQuODE0MjIyIDIxNi4xNzc3NzhINzIyLjgzMDIyMnogbS0yMjcuNTU1NTU1IDBMMzcwLjQ2MDQ0NCAwaDE2MS43OTJsMTI0LjgxNDIyMyAyMTYuMTc3Nzc4SDQ5NS4yNzQ2Njd6IG0tMjE2LjE3Nzc3OCAwTDE1NC4yODI2NjcgMGgxNTAuNDE0MjIybDEyNC44MTQyMjIgMjE2LjE3Nzc3OEgyNzkuMDk2ODg5ek0wIDIxNi4xNzc3Nzh2LTEwMi40QTExMy43Nzc3NzggMTEzLjc3Nzc3OCAwIDAgMSA4OS45OTgyMjIgMi41MDMxMTFMMjEzLjMzMzMzMyAyMTYuMTc3Nzc4SDB6XCIgZmlsbD1cIiNkNDIzN2FcIiBwLWlkPVwiNjI3OVwiPjwvcGF0aD48L3N2Zz4gICAgICAgICAgPGgzIGNsYXNzPVwiZm9udC1ib2xkXCI+6KeC55yL5bm/5ZGK6I635b6X5aWW5YqxPC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDx0ZW1wbGF0ZSAjZm9vdGVyPlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICA8ZWwtYnV0dG9uIHR5cGU9XCJwcmltYXJ5XCIgQGNsaWNrPVwiYWREaWFsb2cgPSBmYWxzZVwiPuWFs+mXrTwvZWwtYnV0dG9uPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgIDwvZWwtZGlhbG9nPiAtLT5cbiAgICA8ZWwtZGlhbG9nIGlkPVwidmlwLWJveFwiIGNsYXNzPVwibm92aXBcIlxuICAgICAgOnRpdGxlPVwiJ+W5v+WRiidcIiByZWY9XCJteUVsZW1lbnRcIlxuICAgICAgOnZpc2libGUuc3luYz1cInFyRGlhbG9nXCJcbiAgICAgIHdpZHRoPVwiNjAwcHhcIlxuICAgICAgOmNsb3NlLW9uLWNsaWNrLW1vZGFsPVwiZmFsc2VcIlxuICAgICAgOmNsb3NlLW9uLXByZXNzLWVzY2FwZT1cImZhbHNlXCJcbiAgICAgIDpzaG93LWNsb3NlPVwiZmFsc2VcIj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMz7or7fkvb/nlKjlvq7kv6HmiavnoIE8L2gzPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibXQtMVwiPuaJq+eggeWQjuivt+eCueWHu+KAnOaJk+W8gOW5v+WRiuKAneiTneiJsuaMiemSrjwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIOaEn+iwouWvueW8gOa6kOi9r+S7tueahOaUr+aMgeS4jueQhuino++8jOeOsOmYtuauteingueci+W5v+WRiuWwhuacieWKqeS6jnV2aWV3LXBsdXPnmoTlj6/mjIHnu63lj5HlsZXvvIznibnliKvmmK/lnKjpuL/okpnjgIF1bmktYXBwLXjnrYnmlrnpnaLnmoTlvIDlj5HvvIzmiJHku6zkuZ/lnKjnp6/mnoHmjqLntKLmm7Tlpb3nmoTlj6/mjIHnu63lj5HlsZXmqKHlvI/vvIzku6XmipXlhaXmm7TlpJrnmoTnoJTlj5Hog73lipvkvr/kuo7mj5Dkvpvmm7TliqDlpb3nlKjnmoTmoYbmnrbjgILmlLbpm4bkuoblpKflrrbnmoTmhI/op4Hlj43ppojmiJHku6zmraPlnKjop4TliJLmjqjlh7rnpL7ljLrlj5HluJbojrflvpflhY3lub/lkYrngrnmlbDvvIzoh6rlqpLkvZPlj5Hnn63op4bpopHmlZnnqIvojrflvpflub/lkYrngrnmlbDvvIzmj5DkuqRGYXN0Vmlld+WPr+inhuWMluaooeadv+mAgeW5v+WRiueCueaVsO+8jOaPkOS6pOmhueebrue6v+S4iuahiOS+i+mAgeW5v+WRiueCueaVsO+8jOW4ruWKqeWFtuWug+eUqOaIt+ino+WGs+mXrumimOmAgeW5v+WRiueCueaVsOetieWkmuenjeaWueazle+8jOW4jOacm+iDveWkn+mAguW6lOS4jemAmueahOmcgOaxgu+8jOW5tuS4lOiDveenr+aegeaOqOWKqHV2aWV3LXBsdXPlj5HlsZXjgIJcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwdC0zXCIgdi1sb2FkaW5nPVwicXJVcmwgPyBmYWxzZSA6IHRydWVcIj5cbiAgICAgICAgICA8aW1nIDpzcmM9XCJxclVybFwiIGFsdD1cIm1pbmRcIiB2LWlmPVwicXJVcmxcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwhLS0gPGRpdiBjbGFzcz1cIm1iLTNcIj5cbiAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvdXNlci92aXBcIiBjbGFzcz1cIm1iLTQgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgZmxleC1jb2xcIj5cbiAgICAgICAgICAgIOWmguaenOWunuWcqOS4jeaDs+ingueci+W5v+WRiu+8jOW6lOmDqOWIhueUqOaIt+mcgOaxgueOsOW3suaUr+aMgeW8gOmAmuS8muWRmOWOu+W5v+WRiuOAglxuICAgICAgICAgIDwvcm91dGVyLWxpbms+XG4gICAgICAgIDwvZGl2PiAtLT5cbiAgICAgIDwvZGl2PlxuICAgICAgPHRlbXBsYXRlICNmb290ZXI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGVsLWJ1dHRvbiB0eXBlPVwicHJpbWFyeVwiIEBjbGljay5zdG9wPVwiY2hlY2tFbmRcIj7lt7Lnu4/nnIvlrow8L2VsLWJ1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgIDwvZWwtZGlhbG9nPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6ICcnLFxuICAgICAgYWREaWFsb2c6IGZhbHNlLFxuICAgICAgcXJEaWFsb2c6IGZhbHNlLFxuICAgICAgcXJVcmw6ICcnLFxuICAgICAgd2F0Y2hFbmQ6IGZhbHNlLFxuICAgICAgbG9hZGluZ0luc3RhbmNlOiBudWxsLFxuICAgICAgdGltZXI6IG51bGwsXG4gICAgICBjaGVjazogbnVsbCxcbiAgICAgIHdoaXRlTGlzdDogW1xuICAgICAgICAnL3VzZXIvbG9naW4uaHRtbCdcbiAgICAgIF1cbiAgICB9O1xuICB9LFxuICBjcmVhdGVkKCkge1xuICAgIC8vIOe7hOS7tuWIm+W7uuaXtuaJp+ihjOeahOmAu+i+ke+8jOWmguaenOacieeahOivnVxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIC8vIOe7hOS7tuaMgui9veWQjuaJp+ihjOeahOmAu+i+ke+8jOWmguaenOacieeahOivnVxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5jaGVja1ZpcCgpXG4gICAgfSwgMTAwMClcbiAgICBpZiAoIXRoaXMudGltZXIpIHtcbiAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICB9LCAxMDAwMClcbiAgICB9XG4gICAgdGhpcy5jaGVjayA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgdGhpcy5jaGVja0Rpc3BsYXkoKVxuICAgIH0sIDUwMDApO1xuICB9LFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jaGVjaylcbiAgfSxcbiAgd2F0Y2g6IHtcbiAgICAkcm91dGUodG8sIGZyb20pIHtcbiAgICAgIHRoaXMuY2hlY2tWaXAoKVxuICAgIH1cbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGluV2woKSB7XG4gICAgICBpZiAodGhpcy4kcm91dGUucGF0aC5zdGFydHNXaXRoKCcvZ3VpZGUvJykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy4kcm91dGUucGF0aC5zdGFydHNXaXRoKCcvY29vcGVyYXRpb24vJykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy4kcm91dGUucGF0aC5zdGFydHNXaXRoKCcvdXNlci8nKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLndoaXRlTGlzdC5pbmNsdWRlcyh0aGlzLiRyb3V0ZS5wYXRoKVxuICAgIH0sXG4gICAgY2hlY2tWaXAoKSB7XG4gICAgICBpZiAodGhpcy5pbldsKCkpIHtcbiAgICAgICAgdGhpcy5xckRpYWxvZyA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmxvY2FsU3RvcmFnZSkge1xuICAgICAgICBsZXQgYWRFeHBpcmUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYWRFeHBpcmUnKVxuICAgICAgICBpZiAoIWFkRXhwaXJlIHx8IChEYXRlLnBhcnNlKG5ldyBEYXRlKCkpIC8gMTAwMCA+IGFkRXhwaXJlKSB8fCAoYWRFeHBpcmUgLSBEYXRlLnBhcnNlKG5ldyBEYXRlKCkpIC8gMTAwMCkgPiA0MzIwMCkge1xuICAgICAgICAgIHRoaXMucXJEaWFsb2cgPSB0cnVlXG4gICAgICAgICAgdGhpcy53YXRjaEFkKClcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMucXJEaWFsb2cgPSBmYWxzZVxuICAgIH0sXG4gICAgb3BlbkRpYWxvZygpIHtcbiAgICAgIHRoaXMucXJEaWFsb2cgPSB0cnVlO1xuICAgIH0sXG4gICAgY2hlY2tEaXNwbGF5KCkge1xuICAgICAgLy8gY29uc3QgZWxlbWVudCA9IHRoaXMuJHJlZnMubXlFbGVtZW50O1xuICAgICAgY29uc3QgZWxlbWVudEV4aXN0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aXAtYm94Jyk7XG4gICAgICBjb25zb2xlLmxvZyhlbGVtZW50RXhpc3RzKVxuICAgICAgaWYgKCFlbGVtZW50RXhpc3RzKSB7XG4gICAgICAgIGFsZXJ0KCfor7flhbPpl63lub/lkYrlsY/olL3lmajmlK/mjIHmiJHku6zvvIEnKVxuICAgICAgICBhbGVydCgn6K+35YWz6Zet5bm/5ZGK5bGP6JS95Zmo5pSv5oyB5oiR5Lus77yBJylcbiAgICAgICAgYWxlcnQoJ+ivt+WFs+mXreW5v+WRiuWxj+iUveWZqOaUr+aMgeaIkeS7rO+8gScpXG4gICAgICAgIC8vIOiOt+WPluaVtOS4qumhtemdoueahOagueWFg+e0oFxuICAgICAgICB2YXIgaHRtbCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgXG4gICAgICAgIC8vIOiuvue9rumAj+aYjuW6puS4ujBcbiAgICAgICAgaHRtbC5zdHlsZS5vcGFjaXR5ID0gJzAnO1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIC8vIGxldCBkaXNwbGF5U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50LiRlbCkuZGlzcGxheTtcbiAgICAgIC8vIGlmIChcbiAgICAgIC8vICAgZGlzcGxheVN0eWxlID09PSAnbm9uZSdcbiAgICAgIC8vICkge1xuICAgICAgLy8gICBhbGVydCgn6K+35YWz6Zet5bm/5ZGK5bGP6JS95Zmo5pSv5oyB5oiR5Lus77yBJylcbiAgICAgIC8vICAgYWxlcnQoJ+ivt+WFs+mXreW5v+WRiuWxj+iUveWZqOaUr+aMgeaIkeS7rO+8gScpXG4gICAgICAvLyB9XG4gICAgICB2YXIgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd2LW1vZGFsJyk7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBkaXNwbGF5U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50c1tpXSkuZGlzcGxheTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGRpc3BsYXlTdHlsZSA9PT0gJ25vbmUnXG4gICAgICAgICkge1xuICAgICAgICAgIGFsZXJ0KCfor7flhbPpl63lub/lkYrlsY/olL3lmajmlK/mjIHmiJHku6zosKLosKLvvIEnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBhc3luYyB3YXRjaEFkKCkge1xuICAgICAgLy8gdGhpcy5sb2FkaW5nSW5zdGFuY2UgPSBFbExvYWRpbmcuc2VydmljZSh7IHRleHQ6ICfor7fmsYLkuK0uLi4nIH0pO1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXhpb3MucG9zdChgaHR0cHM6Ly91aWFkbWluLm5ldC9hcGkvdjEvd3hhcHAvYWQvYWRkYCkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgbGV0IHJlczEgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgIGlmIChyZXMxLmNvZGUgPT09IDIwMCkge1xuICAgICAgICAgICAgLy8gdGhpcy5sb2FkaW5nSW5zdGFuY2UuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMuaWQgPSByZXMxLmRhdGEuaWQ7XG4gICAgICAgICAgICB0aGlzLnFyVXJsID0gcmVzMS5kYXRhLmJhc2U2NDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gdGhpcy5sb2FkaW5nSW5zdGFuY2UuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WHuumUmScgKyByZXMxLm1zZyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIHRoaXMubG9hZGluZ0luc3RhbmNlLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+axguWHuumUmScpO1xuICAgICAgfVxuICAgIH0sXG4gICAgYXN5bmMgY2hlY2tFbmQoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aGlzLiRwcm9tcHQoJ+ivt+i+k+WFpeato+ehrueahOW+ruS/oeaYteensOmqjOivgScsICfmj5DnpLonLCB7XG4gICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLFxuICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLFxuICAgICAgICB9KS50aGVuKCh7IHZhbHVlIH0pID0+IHtcbiAgICAgICAgICBheGlvcy5wb3N0KGBodHRwczovL3VpYWRtaW4ubmV0L2FwaS92MS93eGFwcC9hZC9jaGVjaz9pZD0ke3RoaXMuaWR9YCwge1xuICAgICAgICAgICAgd3huaWNrbmFtZTogdmFsdWVcbiAgICAgICAgICB9KS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIGxldCByZXMxID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICAgIGlmIChyZXMxLmNvZGUgPT09IDIwMCkge1xuICAgICAgICAgICAgICB0aGlzLndhdGNoRW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FkRXhwaXJlJywgRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKSAvIDEwMDAgKyA0MzIwMCk7XG4gICAgICAgICAgICAgIHRoaXMucXJEaWFsb2cgPSBmYWxzZTtcbiAgICAgICAgICAgICAgLy8gdGhpcy5hZERpYWxvZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAvLyB0aGlzLiRlbWl0KCd3YXRjaC1lbmQnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzMS5tc2cpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KS5jYXRjaCgoKSA9PiB7ICAgICBcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmo4Dmn6Xlh7rplJknKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG48L3NjcmlwdD5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vYWRWaXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vYWRWaXAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2FkVmlwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xMWUxMTM1ZVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2FkVmlwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9hZFZpcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCdtYWluJyx7c3RhdGljQ2xhc3M6XCJwYWdlXCIsc3R5bGU6KHtcbiAgICAgICAgbWFyZ2luVG9wOiBfdm0uc2hvd1YyVGlwcyA/ICcyLjNyZW0nIDogMCxcbiAgICB9KX0sW192bS5fdChcInRvcFwiKSxfdm0uX3YoXCIgXCIpLF9jKCdDb250ZW50Jyx7c3RhdGljQ2xhc3M6XCJ0aGVtZS1kZWZhdWx0LWNvbnRlbnRcIn0pLF92bS5fdihcIiBcIiksX2MoJ1BhZ2VFZGl0JyksX3ZtLl92KFwiIFwiKSxfYygnUGFnZU5hdicsX3ZtLl9iKHt9LCdQYWdlTmF2Jyx7IHNpZGViYXJJdGVtczogX3ZtLnNpZGViYXJJdGVtcyB9LGZhbHNlKSksX3ZtLl92KFwiIFwiKSxfYygnYWQtdmlwJyksX3ZtLl92KFwiIFwiKSxfdm0uX3QoXCJib3R0b21cIildLDIpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLTAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMy0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTMtMCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0zLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9QYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiPHRlbXBsYXRlPlxyXG4gICAgPG1haW5cclxuICAgICAgICBjbGFzcz1cInBhZ2VcIlxyXG4gICAgICAgIDpzdHlsZT1cIntcclxuICAgICAgICAgICAgbWFyZ2luVG9wOiBzaG93VjJUaXBzID8gJzIuM3JlbScgOiAwLFxyXG4gICAgICAgIH1cIlxyXG4gICAgPlxyXG4gICAgICAgIDxzbG90IG5hbWU9XCJ0b3BcIiAvPlxyXG5cclxuICAgICAgICA8Q29udGVudCBjbGFzcz1cInRoZW1lLWRlZmF1bHQtY29udGVudFwiIC8+XHJcbiAgICAgICAgPFBhZ2VFZGl0IC8+XHJcbiAgICAgICAgPFBhZ2VOYXYgdi1iaW5kPVwieyBzaWRlYmFySXRlbXMgfVwiIC8+XHJcbiAgICAgICAgPGFkLXZpcD48L2FkLXZpcD5cclxuICAgICAgICA8c2xvdCBuYW1lPVwiYm90dG9tXCIgLz5cclxuICAgIDwvbWFpbj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBQYWdlRWRpdCBmcm9tIFwiQHRoZW1lL2NvbXBvbmVudHMvUGFnZUVkaXQudnVlXCI7XHJcbmltcG9ydCBQYWdlTmF2IGZyb20gXCJAdGhlbWUvY29tcG9uZW50cy9QYWdlTmF2LnZ1ZVwiO1xyXG5pbXBvcnQgQWRWaXAgZnJvbSBcIkB0aGVtZS9jb21wb25lbnRzL2FkVmlwLnZ1ZVwiOztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGNvbXBvbmVudHM6IHsgUGFnZUVkaXQsIFBhZ2VOYXYsIEFkVmlwIH0sXHJcbiAgICBwcm9wczogW1wic2lkZWJhckl0ZW1zXCJdLFxyXG4gICAgZGF0YSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAvLyBzaG93VjJUaXBzOiAhbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJzaG93VjJUaXBzXCIpLFxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG59O1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic3R5bHVzXCI+XHJcbkByZXF1aXJlICcuLi9zdHlsZXMvd3JhcHBlci5zdHlsJztcclxuXHJcbi5wYWdlIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9QYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xMDgyMDllYVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1BhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL1BhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=