(window.webpackJsonp=window.webpackJsonp||[]).push([[5,80,82],{424:function(t,e,s){},431:function(t,e,s){},433:function(t,e,s){},434:function(t,e,s){"use strict";s(424)},435:function(t,e,s){},442:function(t,e,s){},445:function(t,e,s){"use strict";s.r(e);s(434);var a=s(18),i=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("div",{staticClass:"sidebar-button",on:{click:function(e){return t.$emit("toggle-sidebar")}}},[e("svg",{staticClass:"icon",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",role:"img",viewBox:"0 0 448 512"}},[e("path",{attrs:{fill:"currentColor",d:"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"}})])])}),[],!1,null,null,null);e.default=i.exports},447:function(t,e,s){"use strict";s(431)},448:function(t,e,s){"use strict";s(433)},449:function(t,e,s){"use strict";s(435)},455:function(t,e,s){"use strict";s(442)},545:function(t,e,s){"use strict";s.r(e);s(191),s(12),s(21),s(67),s(113);var a=s(195),i=s.n(a),o=(t,e,s=null)=>{let a=i()(e,"title","");return i()(e,"frontmatter.tags")&&(a+=" "+e.frontmatter.tags.join(" ")),s&&(a+=" "+s),n(t,a)};const n=(t,e)=>{const s=t=>t.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),a=new RegExp("[^\0-]"),i=t.split(/\s+/g).map(t=>t.trim()).filter(t=>!!t);if(a.test(t))return i.some(t=>e.toLowerCase().indexOf(t)>-1);{const a=t.endsWith(" ");return new RegExp(i.map((t,e)=>i.length!==e+1||a?`(?=.*\\b${s(t)}\\b)`:`(?=.*\\b${s(t)})`).join("")+".+","gi").test(e)}};var r={name:"SearchBox",data:()=>({query:"",focused:!1,focusIndex:0,placeholder:void 0}),computed:{showSuggestions(){return this.focused&&this.suggestions&&this.suggestions.length},suggestions(){const t=this.query.trim().toLowerCase();if(!t)return;const{pages:e}=this.$site,s=this.$site.themeConfig.searchMaxSuggestions||5,a=this.$localePath,i=[];for(let n=0;n<e.length&&!(i.length>=s);n++){const r=e[n];if(this.getPageLocalePath(r)===a&&this.isSearchable(r))if(o(t,r))i.push(r);else if(r.headers)for(let e=0;e<r.headers.length&&!(i.length>=s);e++){const s=r.headers[e];s.title&&o(t,r,s.title)&&i.push(Object.assign({},r,{path:r.path+"#"+s.slug,header:s}))}}return i},alignRight(){return(this.$site.themeConfig.nav||[]).length+(this.$site.repo?1:0)<=2}},mounted(){this.placeholder=this.$site.themeConfig.searchPlaceholder||"",document.addEventListener("keydown",this.onHotkey)},beforeDestroy(){document.removeEventListener("keydown",this.onHotkey)},methods:{getPageLocalePath(t){for(const e in this.$site.locales||{})if("/"!==e&&0===t.path.indexOf(e))return e;return"/"},isSearchable(t){let e=null;return null===e||(e=Array.isArray(e)?e:new Array(e),e.filter(e=>t.path.match(e)).length>0)},onHotkey(t){t.srcElement===document.body&&["s","/"].includes(t.key)&&(this.$refs.input.focus(),t.preventDefault())},onUp(){this.showSuggestions&&(this.focusIndex>0?this.focusIndex--:this.focusIndex=this.suggestions.length-1)},onDown(){this.showSuggestions&&(this.focusIndex<this.suggestions.length-1?this.focusIndex++:this.focusIndex=0)},go(t){this.showSuggestions&&(this.$router.push(this.suggestions[t].path),this.query="",this.focusIndex=0)},focus(t){this.focusIndex=t},unfocus(){this.focusIndex=-1}}},l=(s(448),s(18)),c=Object(l.a)(r,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"search-box"},[e("input",{ref:"input",class:{focused:t.focused},attrs:{"aria-label":"Search",placeholder:t.placeholder,autocomplete:"off",spellcheck:"false"},domProps:{value:t.query},on:{input:function(e){t.query=e.target.value},focus:function(e){t.focused=!0},blur:function(e){t.focused=!1},keyup:[function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.go(t.focusIndex)},function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"up",38,e.key,["Up","ArrowUp"])?null:t.onUp.apply(null,arguments)},function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"down",40,e.key,["Down","ArrowDown"])?null:t.onDown.apply(null,arguments)}]}}),t._v(" "),t.showSuggestions?e("ul",{staticClass:"suggestions",class:{"align-right":t.alignRight},on:{mouseleave:t.unfocus}},t._l(t.suggestions,(function(s,a){return e("li",{key:a,staticClass:"suggestion",class:{focused:a===t.focusIndex},on:{mousedown:function(e){return t.go(a)},mouseenter:function(e){return t.focus(a)}}},[e("a",{attrs:{href:s.path},on:{click:function(t){t.preventDefault()}}},[e("span",{staticClass:"page-title"},[t._v(t._s(s.title||s.path))]),t._v(" "),s.header?e("span",{staticClass:"header"},[t._v("> "+t._s(s.header.title))]):t._e()])])})),0):t._e()])}),[],!1,null,null,null).exports,u=s(445),h=s(430);function d(t,e){return t.ownerDocument.defaultView.getComputedStyle(t,null)[e]}var p={components:{SidebarButton:u.default,NavLinks:h.default,SearchBox:c,AlgoliaSearchBox:{}},data:function(){return{linksWrapMaxWidth:null}},mounted:function(){var t=this,e=parseInt(d(this.$el,"paddingLeft"))+parseInt(d(this.$el,"paddingRight")),s=function(){document.documentElement.clientWidth<719?t.linksWrapMaxWidth=null:t.linksWrapMaxWidth=t.$el.offsetWidth-e-(t.$refs.siteName&&t.$refs.siteName.offsetWidth||0)};s(),window.addEventListener("resize",s,!1)},computed:{algolia:function(){return this.$themeLocaleConfig.algolia||this.$site.themeConfig.algolia||{}},isAlgoliaSearch:function(){return this.algolia&&this.algolia.apiKey&&this.algolia.indexName}},methods:{noMoreTips:function(){localStorage.setItem("showV2Tips",!0),location.reload()}}},f=(s(449),Object(l.a)(p,(function(){var t=this,e=t._self._c;return e("div",{class:{"custom-navbar":t.showV2Tips}},[t.showV2Tips?e("div",{staticClass:"showV2Tips jump-link"},[t._v("\n\t\t    免费思维导图、流程图、手绘风格草图、演示文稿、文档、表格在线文档：\n\t\t    "),e("a",{staticClass:"link",attrs:{target:"_blank",href:"https://mind.lingyun.net/"}},[t._v("FinalMind")]),t._v(" "),e("a",{staticClass:"link",staticStyle:{"margin-left":"30px"},attrs:{href:"javascript:;"},on:{click:t.noMoreTips}},[t._v("不再提示")])]):t._e(),t._v(" "),e("header",{staticClass:"navbar",style:{position:t.showV2Tips?"relative":"fixed"}},[e("SidebarButton",{on:{"toggle-sidebar":function(e){return t.$emit("toggle-sidebar")}}}),t._v(" "),e("router-link",{staticClass:"home-link",attrs:{to:t.$localePath}},[t.$site.themeConfig.logo?e("img",{staticClass:"logo",attrs:{src:t.$withBase(t.$site.themeConfig.logo),alt:t.$siteTitle}}):t._e(),t._v(" "),t.$siteTitle?e("span",{ref:"siteName",staticClass:"site-name",class:{"can-hide":t.$site.themeConfig.logo}},[t._v("uview-plus")]):t._e()]),t._v(" "),e("div",{staticClass:"links",style:t.linksWrapMaxWidth?{"max-width":t.linksWrapMaxWidth+"px"}:{}},[t.isAlgoliaSearch?e("AlgoliaSearchBox",{attrs:{options:t.algolia}}):!1!==t.$site.themeConfig.search&&!1!==t.$page.frontmatter.search?e("SearchBox"):t._e(),t._v(" "),e("NavLinks",{staticClass:"can-hide"})],1)],1)])}),[],!1,null,null,null));e.default=f.exports},547:function(t,e,s){"use strict";s.r(e);var a={components:{NavLink:s(417).default},computed:{data:function(){return this.$page.frontmatter},actionLink:function(){return{link:this.data.actionLink,text:this.data.actionText}}}},i=(s(447),s(18)),o=Object(i.a)(a,(function(){var t=this,e=t._self._c;return e("div",[e("main",{staticClass:"home",attrs:{"aria-labelledby":"main-title"}},[e("header",{staticClass:"hero"},[t.data.heroImage?e("img",{attrs:{src:t.$withBase(t.data.heroImage),alt:t.data.heroAlt||"hero"}}):t._e(),t._v(" "),null!==t.data.heroText?e("h1",{attrs:{id:"main-title"}},[t._v(t._s(t.data.heroText||t.$title||"Hello"))]):t._e(),t._v(" "),null!==t.data.tagline?e("p",{staticClass:"description"},[t._v(t._s(t.data.tagline||t.$description||"Welcome to your VuePress site"))]):t._e(),t._v(" "),t.data.actionText&&t.data.actionLink?e("p",{staticClass:"action"},[e("NavLink",{staticClass:"action-button",attrs:{item:t.actionLink}})],1):t._e()]),t._v(" "),t.data.features&&t.data.features.length?e("div",{staticClass:"features"},t._l(t.data.features,(function(s,a){return e("div",{key:a,staticClass:"feature"},[e("h2",[t._v(t._s(s.title))]),t._v(" "),e("p",[t._v(t._s(s.details))])])})),0):t._e(),t._v(" "),e("Content",{staticClass:"theme-default-content custom"}),t._v(" "),t.data.footer?e("div",{staticClass:"footer"},[t._v(t._s(t.data.footer))]):t._e()],1)])}),[],!1,null,null,null);e.default=o.exports},550:function(t,e,s){"use strict";s.r(e);var a=s(443),i=s(430),o={name:"Sidebar",components:{SidebarLinks:a.default,NavLinks:i.default},data:function(){return{apiShow:""}},props:["items"],created:function(){if("undefined"!=typeof window)switch(this.apiShow=localStorage.getItem("apiShow")?localStorage.getItem("apiShow"):"composition",console.log(this.apiShow,"apiShow"),this.apiShow){case"options":document.querySelector("#app").classList.remove("show-composition"),document.querySelector("#app").classList.add("show-options");break;case"composition":default:document.querySelector("#app").classList.remove("show-options"),document.querySelector("#app").classList.add("show-composition")}},methods:{apiChange:function(t){if("undefined"!=typeof window)switch(localStorage.setItem("apiShow",t),this.apiShow){case"options":document.querySelector("#app").classList.remove("show-composition"),document.querySelector("#app").classList.add("show-options");break;case"composition":default:document.querySelector("#app").classList.remove("show-options"),document.querySelector("#app").classList.add("show-composition")}}}},n=(s(455),s(18)),r=Object(n.a)(o,(function(){var t=this,e=t._self._c;return e("div",[e("aside",{staticClass:"sidebar",style:{marginTop:t.showV2Tips?"2.3rem":0}},[e("a",{staticClass:"jump-linker",attrs:{target:"_blank",href:"https://ext.dcloud.net.cn/plugin?id=20103"}},[e("img",{attrs:{src:t.$withBase("/customer/uiadmin-unicloud.png")}})]),t._v(" "),e("div",{staticClass:"jump-linker",attrs:{target:"_blank"}},[e("img",{attrs:{src:t.$withBase("/customer/contact1.png")}})]),t._v(" "),e("div",{staticStyle:{"background-color":"#f9f9f9",padding:"15px 10px","margin-top":"15px",width:"170px","border-radius":"6px"}},[e("el-switch",{attrs:{"active-value":"composition","inactive-value":"options","active-text":"组合式","inactive-text":"选项式"},on:{change:t.apiChange},model:{value:t.apiShow,callback:function(e){t.apiShow=e},expression:"apiShow"}})],1),t._v(" "),e("NavLinks"),t._v(" "),t._t("top"),t._v(" "),e("SidebarLinks",{attrs:{depth:0,items:t.items}}),t._v(" "),t._t("bottom")],2)])}),[],!1,null,null,null);e.default=r.exports},666:function(t,e,s){"use strict";s.r(e);var a=s(547),i=s(545),o=s(653),n=s(550),r=s(414),l={name:"Layout",components:{Home:a.default,Page:o.default,Sidebar:n.default,Navbar:i.default},data:()=>({isSidebarOpen:!1}),computed:{shouldShowNavbar(){const{themeConfig:t}=this.$site,{frontmatter:e}=this.$page;return!1!==e.navbar&&!1!==t.navbar&&(this.$title||t.logo||t.repo||t.nav||this.$themeLocaleConfig.nav)},shouldShowSidebar(){const{frontmatter:t}=this.$page;return!t.home&&!1!==t.sidebar&&this.sidebarItems.length},sidebarItems(){return Object(r.j)(this.$page,this.$page.regularPath,this.$site,this.$localePath)},pageClasses(){const t=this.$page.frontmatter.pageClass;return[{"no-navbar":!this.shouldShowNavbar,"sidebar-open":this.isSidebarOpen,"no-sidebar":!this.shouldShowSidebar},t]}},mounted(){this.$router.afterEach(()=>{this.isSidebarOpen=!1})},methods:{toggleSidebar(t){this.isSidebarOpen="boolean"==typeof t?t:!this.isSidebarOpen,this.$emit("toggle-sidebar",this.isSidebarOpen)},onTouchStart(t){this.touchStart={x:t.changedTouches[0].clientX,y:t.changedTouches[0].clientY}},onTouchEnd(t){const e=t.changedTouches[0].clientX-this.touchStart.x,s=t.changedTouches[0].clientY-this.touchStart.y;Math.abs(e)>Math.abs(s)&&Math.abs(e)>40&&(e>0&&this.touchStart.x<=80?this.toggleSidebar(!0):this.toggleSidebar(!1))}}},c=s(18),u=Object(c.a)(l,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"theme-container",class:t.pageClasses,on:{touchstart:t.onTouchStart,touchend:t.onTouchEnd}},[t.shouldShowNavbar?e("Navbar",{on:{"toggle-sidebar":t.toggleSidebar}}):t._e(),t._v(" "),e("div",{staticClass:"sidebar-mask",on:{click:function(e){return t.toggleSidebar(!1)}}}),t._v(" "),e("Sidebar",{attrs:{items:t.sidebarItems},on:{"toggle-sidebar":t.toggleSidebar},scopedSlots:t._u([{key:"top",fn:function(){return[t._t("sidebar-top")]},proxy:!0},{key:"bottom",fn:function(){return[t._t("sidebar-bottom")]},proxy:!0}],null,!0)}),t._v(" "),t.$page.frontmatter.home?e("Home"):e("Page",{attrs:{"sidebar-items":t.sidebarItems},scopedSlots:t._u([{key:"top",fn:function(){return[t._t("page-top")]},proxy:!0},{key:"bottom",fn:function(){return[t._t("page-bottom")]},proxy:!0}],null,!0)})],1)}),[],!1,null,null,null);e.default=u.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,